{"version":3,"file":"neo-main.js","mappings":"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","sources":["webpack://craft-neo/webpack/bootstrap","webpack://craft-neo/webpack/runtime/compat get default export","webpack://craft-neo/webpack/runtime/define property getters","webpack://craft-neo/webpack/runtime/hasOwnProperty shorthand","webpack://craft-neo/external var \"jQuery\"","webpack://craft-neo/external var \"Garnish\"","webpack://craft-neo/external var \"Craft\"","webpack://craft-neo/./src/assets/src/namespace.js","webpack://craft-neo/./src/assets/src/input/BlockSort.js","webpack://craft-neo/./src/assets/src/input/BlockTypeTab.js","webpack://craft-neo/./src/assets/src/input/BlockType.js","webpack://craft-neo/./src/assets/src/input/Group.js","webpack://craft-neo/./src/assets/src/jquery-extensions.js","webpack://craft-neo/./src/assets/src/input/Block.js","webpack://craft-neo/./src/assets/src/plugins/cpfieldinspect/main.js","webpack://craft-neo/./src/assets/src/input/NewBlockMenu.js","webpack://craft-neo/./src/assets/src/input/Buttons.js","webpack://craft-neo/./src/assets/src/input/ButtonsGrid.js","webpack://craft-neo/./src/assets/src/input/ButtonsList.js","webpack://craft-neo/./src/assets/src/input/Input.js","webpack://craft-neo/./src/assets/src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = Garnish;","const __WEBPACK_NAMESPACE_OBJECT__ = Craft;","export default {\n\n  _stack: [[]],\n\n  enter (segments, join = true) {\n    if (typeof segments === 'string') {\n      segments = this.fromFieldName(segments)\n    }\n\n    if (join) {\n      const joined = this.getNamespace()\n      joined.push(...segments)\n\n      segments = joined\n    }\n\n    this._stack.push(segments)\n  },\n\n  enterByFieldName (fieldName, join = true) {\n    this.enter(this.fromFieldName(fieldName), join)\n  },\n\n  leave () {\n    return this._stack.length > 1\n      ? this._stack.pop()\n      : this.getNamespace()\n  },\n\n  getNamespace () {\n    return Array.from(this._stack[this._stack.length - 1])\n  },\n\n  parse (value) {\n    if (typeof value === 'string') {\n      if (value.indexOf('[') > -1) {\n        return this.fromFieldName(value)\n      }\n\n      if (value.indexOf('-') > -1) {\n        return value.split('-')\n      }\n\n      if (value.indexOf('.') > -1) {\n        return value.split('.')\n      }\n\n      return value\n    }\n\n    return Array.from(value)\n  },\n\n  value (value, separator = '-') {\n    const segments = this.getNamespace()\n    segments.push(value)\n\n    return segments.join(separator)\n  },\n\n  fieldName (fieldName = '') {\n    const prefix = this.toFieldName()\n\n    if (prefix) {\n      return prefix + fieldName.replace(/([^'\"[\\]]+)([^'\"]*)/, '[$1]$2')\n    }\n\n    return fieldName\n  },\n\n  toString (separator = '-') {\n    return this.getNamespace().join(separator)\n  },\n\n  toFieldName () {\n    const segments = this.getNamespace()\n\n    switch (segments.length) {\n      case 0: return ''\n      case 1: return segments[0]\n    }\n\n    return segments[0] + '[' + segments.slice(1).join('][') + ']'\n  },\n\n  fromFieldName (fieldName) {\n    return fieldName.match(/[^[\\]\\s]+/g) || []\n  }\n}\n","import $ from 'jquery'\nimport Garnish from 'garnish'\n\nconst BlockSort = Garnish.Drag.extend({\n\n  $container: null,\n  blocks: null,\n  maxTopBlocks: 0,\n\n  _draggeeBlocks: null,\n\n  init (items, settings) {\n    if (typeof settings === 'undefined' && $.isPlainObject(items)) {\n      settings = items\n      items = null\n    }\n\n    settings = $.extend({}, BlockSort.defaults, settings)\n    settings.axis = Garnish.Y_AXIS\n\n    this.base(items, settings)\n\n    this.$container = settings.container\n    this.blocks = []\n    this.maxTopBlocks = settings.maxTopBlocks\n  },\n\n  getHelperTargetX () {\n    return this.$draggee.offset().left\n  },\n\n  getHelperTargetY () {\n    const magnet = this.settings.magnetStrength\n\n    if (magnet !== 1) {\n      const draggeeOffsetY = this.$draggee.offset().top\n      return draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - draggeeOffsetY) / magnet)\n    }\n\n    return this.base()\n  },\n\n  getBlockByElement ($block) {\n    return this.blocks.find(block => block.$container.is($block))\n  },\n\n  getParentBlock (block) {\n    const $parentBlock = block.$container.parent().closest('.ni_block')\n\n    return $parentBlock.length > 0 ? this.getBlockByElement($parentBlock) : false\n  },\n\n  onDragStart () {\n    const that = this\n\n    this._draggeeBlocks = []\n    this.$draggee.each(function () {\n      that._draggeeBlocks.push(that.getBlockByElement(this))\n    })\n\n    this.base()\n    this._calculateMidpoints()\n  },\n\n  onDrag () {\n    const midpoint = this._getClosestMidpoint()\n\n    if (midpoint) {\n      this._moveDraggeeToBlock(midpoint.block, midpoint.type, midpoint.direction)\n    }\n\n    this.base()\n  },\n\n  onDragStop () {\n    const that = this\n    this.$draggee.each(function () {\n      const $block = $(this)\n      const block = that.getBlockByElement($block)\n      const isRoot = $block.parent().is(that.$container)\n\n      if (isRoot) {\n        block.setLevel(1)\n      } else {\n        const parentBlock = that.getParentBlock(block)\n\n        block.setLevel(parentBlock.getLevel() + 1)\n      }\n\n      $block.find('.ni_block').each(function () {\n        const $childBlock = $(this)\n        const childBlock = that.getBlockByElement($childBlock)\n        const parentBlock = that.getParentBlock(childBlock)\n\n        childBlock.setLevel(parentBlock.getLevel() + 1)\n      })\n    })\n\n    this.returnHelpersToDraggees()\n\n    this.base()\n  },\n\n  addBlock (block) {\n    this.blocks.push(block)\n\n    this.addItems(block.$container)\n  },\n\n  removeBlock (block) {\n    this.blocks = this.blocks.filter(b => b !== block)\n\n    this.removeItems(block.$container)\n  },\n\n  _getClosestMidpoint () {\n    let minDistance = Number.MAX_VALUE\n    let maxDistance = Number.MIN_VALUE\n    let closest = null\n\n    for (const midpoint of this._currentMidpoints) {\n      if (midpoint.direction === BlockSort.DIRECTION_UP) {\n        const compareY = this.mouseY - this.mouseOffsetY\n\n        if (compareY < midpoint.position && midpoint.position < minDistance) {\n          minDistance = midpoint.position\n          closest = midpoint\n        }\n      } else {\n        const compareY = this.mouseY - this.mouseOffsetY + this._draggeeBlockHeight\n\n        if (compareY > midpoint.position && midpoint.position > maxDistance) {\n          maxDistance = midpoint.position\n          closest = midpoint\n        }\n      }\n    }\n\n    return closest\n  },\n\n  _calculateMidpoints () {\n    const margin = 10\n\n    this._draggeeBlockY = this.$draggee.offset().top\n    this._draggeeBlockHeight = this.$draggee.height() + margin\n\n    this._currentMidpoints = []\n\n    for (const block of this.blocks) {\n      if (block.$container.closest(this.$draggee).length === 0) {\n        const midpoints = this._getBlockMidpoints(block)\n\n        for (const type of Object.keys(midpoints)) {\n          const position = midpoints[type]\n          const direction = this._draggeeBlockY > position\n            ? BlockSort.DIRECTION_UP\n            : BlockSort.DIRECTION_DOWN\n\n          this._currentMidpoints.push({\n            block,\n            position,\n            type,\n            direction\n          })\n        }\n      }\n    }\n\n    const endMidpoint = this.$container.offset().top + this.$container.height() + (margin / 2)\n    this._currentMidpoints.push({\n      block: null,\n      position: endMidpoint,\n      type: BlockSort.TYPE_END,\n      direction: BlockSort.DIRECTION_DOWN\n    })\n  },\n\n  _getBlockMidpoints (block) {\n    const midpoints = {}\n\n    const border = 1\n    const margin = 10\n    const padding = 14\n\n    const isAncestorCollapsed = (block.$container.parent().closest('.ni_block.is-collapsed').length > 0)\n\n    if (!isAncestorCollapsed) {\n      const offset = block.$container.offset().top\n\n      const isExpanded = block.isExpanded()\n\n      const blockHeight = block.$container.height()\n      const topbarHeight = block.$topbarContainer.height()\n      const childrenHeight = isExpanded ? block.$childrenContainer.height() : 0\n      const preChildrenContentHeight = !(isExpanded && block.$contentContainer.length > 0)\n        ? 0\n        : block.$childrenContainer.length > 0\n          ? block.$childrenContainer.offset().top - block.$contentContainer.offset().top\n          : block.$contentContainer.height()\n\n      const parentBlock = this.getParentBlock(block)\n\n      if (!parentBlock || this._validateDraggeeChildren(parentBlock)) {\n        midpoints[BlockSort.TYPE_CONTENT] = offset + (topbarHeight + preChildrenContentHeight) / 2\n      }\n\n      if (childrenHeight > 0 && block.isExpanded() && this._validateDraggeeChildren(block)) {\n        const buttonsHeight = block.getButtons().$container.height()\n        midpoints[BlockSort.TYPE_CHILDREN] = offset + blockHeight - border - (padding + buttonsHeight + margin) / 2\n      }\n    }\n\n    return midpoints\n  },\n\n  _moveDraggeeToBlock: function (block, type = BlockSort.TYPE_CONTENT, direction = BlockSort.DIRECTION_DOWN) {\n    const parentBlock = block ? this.getParentBlock(block) : null\n    const validChild = this._validateDraggeeChildren(parentBlock)\n\n    switch (type) {\n      case BlockSort.TYPE_CHILDREN:\n        if (this.$draggee.closest(block.$container).length === 0) {\n          block.$blocksContainer.append(this.$draggee)\n        } else if (validChild) {\n          block.$container.after(this.$draggee)\n        }\n        break\n      case BlockSort.TYPE_END:\n        if (validChild) {\n          this.$container.append(this.$draggee)\n        }\n        break\n      default:\n      {\n        if (direction === BlockSort.DIRECTION_UP) {\n          if (validChild) {\n            block.$container.before(this.$draggee)\n          }\n        } else {\n          if (block.getBlockType().isParent() && block.isExpanded() && this._validateDraggeeChildren(block)) {\n            block.$blocksContainer.prepend(this.$draggee)\n          } else if (validChild) {\n            block.$container.after(this.$draggee)\n          }\n        }\n      }\n    }\n\n    this._updateHelperAppearance()\n    this._calculateMidpoints()\n  },\n\n  _validateDraggeeChildren (block) {\n    // If any of the draggee blocks would exceed the field's max levels, we can't allow the move\n    const field = block ? block.getField() : this._draggeeBlocks[0].getField()\n    const maxLevels = field.getMaxLevels()\n\n    if (maxLevels > 0) {\n      const parentLevel = block ? block.getLevel() : -1\n      const firstDraggeeLevel = this._draggeeBlocks[0].getLevel()\n      const blockExceedsMax = b => b.getLevel() - firstDraggeeLevel + parentLevel + 1 >= maxLevels\n      const blockOrDescendantExceedsMax = b => {\n        const descendants = b.getChildren(field.getBlocks(), true)\n\n        return blockExceedsMax(b) || descendants.some(blockOrDescendantExceedsMax)\n      }\n\n      if (this._draggeeBlocks.filter(blockOrDescendantExceedsMax).length > 0) {\n        return false\n      }\n    }\n\n    // If no block, then we're checking at the top level\n    if (!block) {\n      const that = this\n      const topBlocks = this.$container.children('.ni_block:not(.is-disabled)')\n      let topBlocksCount = topBlocks.length\n\n      for (const draggeeBlock of this._draggeeBlocks) {\n        // Is this block allowed at the top level?\n        if (!draggeeBlock.getBlockType().getTopLevel()) {\n          return false\n        }\n      }\n\n      // If the block is already at the top level, don't count it for max top level block check purposes\n      topBlocks.each(function () {\n        if (that._draggeeBlocks.includes(that.getBlockByElement(this))) {\n          topBlocksCount--\n        }\n      })\n\n      // If this move would exceed the field's max top level blocks, we can't allow it\n      if (this.maxTopBlocks > 0 && topBlocksCount >= this.maxTopBlocks) {\n        return false\n      }\n\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildBlocks = blockType.getMaxChildBlocks()\n\n    const blockChildren = block.$childrenContainer.children('.ni_blocks').children('.ni_block')\n    let blockChildCount = blockChildren.length\n    const blockChildrenWithoutDraggees = []\n    const that = this\n\n    // If the block is already a child block, don't count it for validation purposes\n    blockChildren.each(function () {\n      const childBlock = that.getBlockByElement(this)\n\n      if (that._draggeeBlocks.includes(childBlock)) {\n        blockChildCount--\n      } else {\n        blockChildrenWithoutDraggees.push(childBlock)\n      }\n    })\n\n    // Check whether the move would make the potential parent block exceed its max child blocks\n    if (maxChildBlocks > 0 && blockChildCount >= maxChildBlocks) {\n      return false\n    }\n\n    const checkedDraggeeBlocks = []\n\n    for (const draggeeBlock of this._draggeeBlocks) {\n      // Check whether the block is a valid child block for the parent's block type\n      if (!blockType.isValidChildBlock(draggeeBlock)) {\n        return false\n      }\n\n      // Check whether this move would cause any max sibling block type violations, unless we\n      // checked this block already\n      if (checkedDraggeeBlocks.includes(draggeeBlock)) {\n        continue\n      }\n\n      const draggeeBlockType = draggeeBlock.getBlockType()\n      const maxSiblingBlocks = draggeeBlockType.getMaxSiblingBlocks()\n\n      // Also don't bother checking for max sibling block type violations if max sibling\n      // blocks hasn't been set\n      if (maxSiblingBlocks === 0) {\n        continue\n      }\n\n      const draggeeBlocksOfType = this._draggeeBlocks.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n      const siblingBlocksOfType = blockChildrenWithoutDraggees.filter(b => b.getBlockType().getHandle() === draggeeBlockType.getHandle())\n\n      if (siblingBlocksOfType.length + draggeeBlocksOfType.length > maxSiblingBlocks) {\n        return false\n      }\n\n      checkedDraggeeBlocks.push(...draggeeBlocksOfType)\n    }\n\n    return true\n  },\n\n  _updateHelperAppearance () {\n    for (const $helper of this.helpers) {\n      const id = $helper.data('neo-b-id')\n      const block = this.blocks.find(b => b.$container.data('neo-b-id') === id)\n\n      $helper.css({\n        width: block.$container.width() + 1,\n        height: block.$container.height()\n      })\n    }\n  }\n\n}, {\n\n  TYPE_CONTENT: 'content',\n  TYPE_CHILDREN: 'children',\n  TYPE_END: 'end',\n  DIRECTION_UP: 'up',\n  DIRECTION_DOWN: 'down',\n\n  defaults: {\n    container: null,\n    magnetStrength: 1\n  }\n})\n\nexport default BlockSort\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  name: '',\n  errors: []\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._name = settings.name\n    this._errors = settings.errors\n    this._uid = settings.uid\n  },\n\n  getErrors () { return Array.from(this._errors) },\n\n  getName () { return this._name },\n\n  /**\n   * @public\n   * @since 3.7.0\n   * @returns this tab's UID\n   */\n  getUid () { return this._uid }\n})\n","import Garnish from 'garnish'\n\nimport Tab from './BlockTypeTab'\n\nconst _defaults = {\n  id: -1,\n  fieldLayoutId: -1,\n  sortOrder: 0,\n  name: '',\n  handle: '',\n  maxBlocks: 0,\n  maxSiblingBlocks: 0,\n  maxChildBlocks: 0,\n  groupChildBlockTypes: true,\n  childBlocks: false,\n  topLevel: true,\n  tabs: [],\n  hasChildBlocksUiElement: false,\n  creatableByUser: true,\n  deletableByUser: true,\n  editableByUser: true\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._fieldLayoutId = settings.fieldLayoutId | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._name = settings.name\n    this._handle = settings.handle\n    this._description = settings.description\n    this._enabled = settings.enabled\n    this._minBlocks = settings.minBlocks | 0\n    this._maxBlocks = settings.maxBlocks | 0\n    this._minSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._maxSiblingBlocks = settings.maxSiblingBlocks | 0\n    this._minChildBlocks = settings.minChildBlocks | 0\n    this._maxChildBlocks = settings.maxChildBlocks | 0\n    this._groupChildBlockTypes = settings.groupChildBlockTypes\n    this._childBlocks = settings.childBlocks\n    this._topLevel = settings.topLevel\n    this._tabs = settings.tabs.tabNames?.map(\n      tab => tab instanceof Tab\n        ? tab\n        : new Tab({\n          name: tab,\n          uid: settings.tabs.tabUids[tab]\n        })\n    ) ?? []\n    this._html = settings.tabs.html ?? ''\n    this._js = settings.tabs.js ?? ''\n    this._defaultVisibleLayoutElements = settings.tabs.visibleLayoutElements ?? {}\n    this._hasChildBlocksUiElement = settings.hasChildBlocksUiElement\n    this._creatableByUser = settings.creatableByUser\n    this._deletableByUser = settings.deletableByUser\n    this._editableByUser = settings.editableByUser\n  },\n\n  getType () { return 'blockType' },\n  getId () { return this._id },\n  getFieldLayoutId () { return this._fieldLayoutId },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getHandle () { return this._handle },\n  getDescription () { return this._description },\n  getEnabled () { return this._enabled },\n  getMinBlocks () { return this._minBlocks },\n  getMaxBlocks () { return this._maxBlocks },\n  getMinSiblingBlocks () { return this._minSiblingBlocks },\n  getMaxSiblingBlocks () { return this._maxSiblingBlocks },\n  getMinChildBlocks () { return this._minChildBlocks },\n  getMaxChildBlocks () { return this._maxChildBlocks },\n  getGroupChildBlockTypes () { return this._groupChildBlockTypes },\n  getChildBlocks () { return this._childBlocks },\n  getTopLevel () { return this._topLevel },\n  getTabs () { return Array.from(this._tabs) },\n\n  getHtml (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._html, blockId)\n  },\n\n  getJs (blockId = null) {\n    return this._replaceBlockIdPlaceholder(this._js, blockId)\n  },\n\n  getDefaultVisibleLayoutElements () {\n    return {\n      ...this._defaultVisibleLayoutElements\n    }\n  },\n\n  _replaceBlockIdPlaceholder (input, blockId = null) {\n    return blockId !== null ? input.replace(/__NEOBLOCK__/g, blockId) : input\n  },\n\n  getChildBlockItems (items) {\n    const firstPass = items.filter(item => item.getType() === 'group' || this.hasChildBlock(item.getHandle()))\n    return firstPass.filter((item, i) => {\n      if (item.getType() === 'group') {\n        const nextItem = firstPass[i + 1]\n        return nextItem && nextItem.getType() !== 'group'\n      }\n\n      return true\n    })\n  },\n\n  isParent () {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.length > 0)\n  },\n\n  hasChildBlock (handle) {\n    const cb = this.getChildBlocks()\n    return cb === true || cb === '*' || (Array.isArray(cb) && cb.includes(handle))\n  },\n\n  isValidChildBlock (block) {\n    return this.hasChildBlock(block.getBlockType().getHandle())\n  },\n\n  hasChildBlocksUiElement () {\n    return this._hasChildBlocksUiElement\n  },\n\n  isCreatableByUser () {\n    return this._creatableByUser\n  },\n\n  isDeletableByUser () {\n    return this._deletableByUser\n  },\n\n  isEditableByUser () {\n    return this._editableByUser\n  }\n})\n","import Garnish from 'garnish'\n\nconst _defaults = {\n  id: -1,\n  sortOrder: 0,\n  alwaysShowDropdown: null,\n  name: ''\n}\n\nexport default Garnish.Base.extend({\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._id = settings.id | 0\n    this._sortOrder = settings.sortOrder | 0\n    this._alwaysShowDropdown = settings.alwaysShowDropdown\n    this._name = settings.name\n  },\n\n  getType () { return 'group' },\n  getId () { return this._id },\n  getSortOrder () { return this._sortOrder },\n  getName () { return this._name },\n  getAlwaysShowDropdown () { return this._alwaysShowDropdown },\n  isBlank () { return !this._name }\n})\n","import $ from 'jquery'\n\n// @see http://stackoverflow.com/a/12903503/556609\n$.fn.insertAt = function (index, $parent) {\n  return this.each(function () {\n    if (index === 0) {\n      $parent.prepend(this)\n    } else {\n      $parent.children().eq(index - 1).after(this)\n    }\n  })\n}\n","import $ from 'jquery'\nimport '../jquery-extensions'\n\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport { addFieldLinks } from '../plugins/cpfieldinspect/main'\n\nconst _defaults = {\n  namespace: [],\n  blockType: null,\n  id: null,\n  level: 1,\n  buttons: null,\n  enabled: true,\n  collapsed: false,\n  modified: true,\n  showButtons: true,\n  showBlockTypeHandle: false\n}\n\nconst _resources = {}\n\nconst _escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n}\n\nfunction _resourceFilter () {\n  let url = this.href || this.src\n\n  if (url) {\n    const paramIndex = url.indexOf('?')\n\n    url = (paramIndex < 0 ? url : url.substr(0, paramIndex))\n\n    const isNew = !Object.prototype.hasOwnProperty.call(_resources, url)\n    _resources[url] = 1\n\n    return isNew\n  }\n\n  return true\n}\n\nfunction _escapeHTML (str) {\n  return str ? str.replace(/[&<>\"'/]/g, s => _escapeMap[s]) : ''\n}\n\nfunction _limit (s, l = 40) {\n  s = s || ''\n  return s.length > l ? s.slice(0, l - 3) + '...' : s\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _field: null,\n  _blockType: null,\n  _initialised: false,\n  _expanded: true,\n  _enabled: true,\n  _modified: true,\n  _initialState: null,\n  _forceModified: false,\n\n  init (settings = {}, generateElement = false) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._field = settings.field\n    this._blockType = settings.blockType\n    this._id = settings.id\n    this._enabled = settings.enabled && this._blockType.getEnabled()\n    this._initialEnabled = settings.enabled\n    this._modified = settings.modified\n    this._showButtons = settings.showButtons\n    this._renderOldChildBlocksContainer = !settings.blockType.hasChildBlocksUiElement()\n    this.$container = generateElement\n      ? this._generateElement(settings.showBlockTypeHandle)\n      : this._field.$container.find(`[data-neo-b-id=${this._id}]`)\n\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$bodyContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.body\"]`)\n    this.$contentContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.content\"]`)\n    this.$topbarContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbar\"]`)\n    this.$topbarLeftContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarLeft\"]`)\n    this.$topbarRightContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.topbarRight\"]`)\n    this.$handleContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.handle\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n    this.$menuContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.menu\"]`)\n    this.$previewContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.preview\"]`)\n    this.$settingsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.actions\"]`)\n    this.$togglerButton = $neo.filter(`[data-neo-b=\"${this._id}.button.toggler\"]`)\n    this.$enabledInput = $neo.filter(`[data-neo-b=\"${this._id}.input.enabled\"]`)\n    this.$levelInput = $neo.filter(`[data-neo-b=\"${this._id}.input.level\"]`)\n    this.$collapsedInput = $neo.filter(`[data-neo-b=\"${this._id}.input.collapsed\"]`)\n    this.$status = $neo.filter(`[data-neo-b=\"${this._id}.status\"]`)\n    this.$sortOrder = $neo.filter(`[data-neo-b=\"${this._id}.sortOrder\"]`)\n    this.$form = this.$container.closest('form')\n    this.resetButtons(settings.buttons)\n\n    let hasErrors = false\n    if (this._blockType) {\n      for (const tab of this._blockType.getTabs()) {\n        const selector = `[data-neo-b-info=\"${tab.getName()}\"]`\n\n        if (this.$tabContainer.filter(selector).find('ul.errors').length > 0) {\n          hasErrors = true\n          this.$tabButton.filter(selector).addClass('error')\n        }\n      }\n    }\n\n    this.setLevel(settings.level)\n    this.toggleExpansion(hasErrors ? true : !settings.collapsed, false, false)\n    this.toggleShowButtons(this._showButtons)\n\n    this.addListener(this.$topbarContainer, 'dblclick', '@doubleClickTitle')\n    this.$container.data('block', this)\n  },\n\n  _generateElement (showHandle = false) {\n    NS.enter(this._templateNs)\n    const baseInputName = NS.toFieldName()\n    const baseInputId = NS.toString('-')\n    NS.leave()\n\n    const type = this._blockType\n    const typeTabs = type.getTabs()\n    const hasTabs = typeTabs.length > 0\n    const isParent = type.isParent()\n    const actionBtnLabel = `${type.getName()} ${Craft.t('neo', 'Actions')}`\n    const actionMenuId = `neoblock-action-menu-${this._id}`\n    const tabsBtnLabel = `${type.getName()} ${Craft.t('neo', 'Tabs')}`\n    const tabsMenuId = `neoblock-tabs-menu-${this._id}`\n    const sortOrderName = `${this._templateNs[0]}[${this._templateNs.slice(1, this._templateNs.length - 2).join('][')}][sortOrder]`\n    const elementHtml = []\n    elementHtml.push(`\n      <div class=\"ni_block ni_block--${type.getHandle()} is-${this._collapsed ? 'collapsed' : 'expanded'} ${!hasTabs && !isParent ? 'is-empty' : ''} ${isParent ? 'is-parent' : ''}\" data-neo-b-id=\"${this._id}\" data-neo-b-name=\"${type.getName()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[type]\" value=\"${type.getHandle()}\">\n        <input type=\"hidden\" name=\"${baseInputName}[enabled]\" value=\"${this._enabled ? '1' : ''}\" data-neo-b=\"${this._id}.input.enabled\">\n        <input type=\"hidden\" name=\"${baseInputName}[level]\" value=\"${this._level}\" data-neo-b=\"${this._id}.input.level\">\n        <input type=\"hidden\" name=\"${sortOrderName}[]\" value=\"${this._id}\" data-neo-b=\"${this._id}.input.sortOrder\">`)\n\n    if (isNaN(parseInt(this._id))) {\n      elementHtml.push(`\n        <input type=\"hidden\" name=\"${baseInputName}[collapsed]\" value=\"${!this._expanded ? '1' : ''}\" data-neo-b=\"${this._id}.input.collapsed\">`)\n    }\n\n    elementHtml.push(`\n        <div class=\"ni_block_topbar\" data-neo-b=\"${this._id}.container.topbar\">\n          <div class=\"ni_block_topbar_left\" data-neo-b=\"${this._id}.container.topbarLeft\">\n            <div class=\"ni_block_topbar_item\" data-neo-b=\"${this._id}.select\">\n              <div class=\"checkbox block-checkbox\" title=\"${Craft.t('neo', 'Select')} aria-label=\"${Craft.t('neo', 'Select')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item title\">\n              <span class=\"blocktype\" data-neo-b=\"${this._id}.select\">${type.getName()}</span>\n            </div>\n            <div class=\"ni_block_topbar_item preview-container clip-text\">\n              <span class=\"preview\" data-neo-b=\"${this._id}.container.preview\">&nbsp;</span>\n            </div>\n          </div>\n          <div class=\"ni_block_topbar_right\" data-neo-b=\"${this._id}.container.topbarRight\">\n            <div class=\"ni_block_topbar_item size-full tabs\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n              <div class=\"tabs_trigger\" data-neo-b=\"${this._id}.button.toggler\"></div>`)\n    }\n\n    if (typeTabs.length > 1) {\n      elementHtml.push(`\n              <div class=\"tabs_inner\" data-neo-b=\"${this._id}.container.tabs\">`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tab = typeTabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                <a class=\"tab ${!i ? 'is-selected' : ''}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>`)\n      }\n\n      elementHtml.push(`\n              </div>\n              <div>\n                <button type=\"button\" role=\"button\" title=${Craft.t('neo', 'Tabs')} aria-controls=\"${tabsMenuId}\" aria-label=\"${tabsBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.tabs\" class=\"tabs_btn menubtn\">\n                  ${typeTabs[0].getName()}\n                </button>\n                <div id=\"${tabsMenuId}\" class=\"neo_block_tabs-menu menu menu--disclosure\">\n                  <ul>`)\n\n      for (let i = 0; i < typeTabs.length; i++) {\n        const tab = typeTabs[i]\n        const tabName = tab.getName()\n        const tabUid = tab.getUid()\n        elementHtml.push(`\n                    <li>\n                      <a${!i ? ' class=\"is-selected\"' : ''} href=\"#\" type=\"button\" role=\"button\" aria-label=\"${tabName}\" data-neo-b=\"${this._id}.button.tab\" data-neo-b-info=\"${tabName}\" data-neo-b-tabuid=\"${tabUid}\">${tabName}</a>\n                    </li>`)\n      }\n\n      elementHtml.push(`\n                  </ul>\n                </div>\n              </div>`)\n    }\n\n    elementHtml.push(`\n            </div>\n            <div class=\"ni_block_topbar_item hidden\" data-neo-b=\"${this._id}.status\">\n              <div class=\"status off\" title=\"${Craft.t('neo', 'Disabled')}\"></div>\n            </div>\n            <div class=\"ni_block_topbar_item block-settings\">\n              <div>\n                <button class=\"btn settings icon menubtn\" type=\"button\" role=\"button\" title=\"${Craft.t('neo', 'Actions')}\" aria-controls=\"${actionMenuId}\" aria-label=\"${actionBtnLabel}\" data-disclosure-trigger data-neo-b=\"${this._id}.button.actions\"></button>\n                <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\" data-neo-b=\"${this._id}.container.menu\">\n                  <ul class=\"padded\">`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n                    <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Collapse')}\">${Craft.t('neo', 'Collapse')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Expand')}\">${Craft.t('neo', 'Expand')}</a></li>`)\n    }\n\n    elementHtml.push(`\n                    <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Disable')}\">${Craft.t('neo', 'Disable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Enable')}\">${Craft.t('neo', 'Enable')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move up')}\">${Craft.t('neo', 'Move up')}</a></li>\n                    <li class=\"hidden\"><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Move down')}\">${Craft.t('neo', 'Move down')}</a></li>\n                  </ul>\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a data-icon=\"plus\" data-action=\"add\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Add block above')}\">${Craft.t('neo', 'Add block above')}</a></li>\n                    <li><a data-icon=\"field\" data-action=\"copy\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Copy')}\">${Craft.t('neo', 'Copy')}</a></li>\n                    <li><a data-icon=\"brush\" data-action=\"paste\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Paste')}\">${Craft.t('neo', 'Paste')}</a></li>\n                    <li><a data-icon=\"share\" data-action=\"duplicate\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Clone')}\">${Craft.t('neo', 'Clone')}</a></li>\n                  </ul>`)\n\n    if (type.isDeletableByUser()) {\n      elementHtml.push(`\n                  <hr>\n                  <ul class=\"padded\">\n                    <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" type=\"button\" role=\"button\" aria-label=\"${Craft.t('neo', 'Delete')}\">${Craft.t('neo', 'Delete')}</a></li>\n                  </ul>`)\n    }\n\n    elementHtml.push(`\n                </div>\n              </div>\n            </div>\n            <div class=\"ni_block_topbar_item block-reorder\">\n              <a class=\"move icon\" title=\"${Craft.t('neo', 'Reorder')}\" aria-label=\"${Craft.t('neo', 'Reorder')}\" role=\"button\" data-neo-b=\"${this._id}.button.move\"></a>\n            </div>\n          </div>\n        </div>`)\n\n    if (hasTabs || isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_body\" data-neo-b=\"${this._id}.container.body\">`)\n\n      if (hasTabs) {\n        elementHtml.push(`\n          <div class=\"ni_block_content\" data-neo-b=\"${this._id}.container.content\">\n            ${type.getHtml(this._id)}\n          </div>`)\n      }\n\n      if (isParent && this._renderOldChildBlocksContainer) {\n        elementHtml.push(`\n          <div class=\"ni_block_children\" data-neo-b=\"${this._id}.container.children\">\n            <div class=\"ni_blocks\" data-neo-b=\"${this._id}.container.blocks\">\n            </div>\n            <div data-neo-b=\"${this._id}.container.buttons\" class=\"hidden\"></div>\n            <div data-neo-b=\"${this._id}.container.childrenWarnings\" class=\"hidden\">\n              <p class=\"first warning with-icon\">${Craft.t('neo', \"This Neo field's maximum number of levels has been reached, so no child blocks can be added here.\")}</p>\n            </div>\n          </div>`)\n      }\n\n      elementHtml.push(`\n        </div>`)\n    }\n\n    if (isParent) {\n      elementHtml.push(`\n        <div class=\"ni_block_collapsed-children\" data-neo-b=\"${this._id}.container.collapsedChildren\"></div>`)\n    }\n\n    elementHtml.push(`\n      <div data-neo=\"container.buttons\"></div>`)\n\n    const $elementHtml = $(elementHtml.join(''))\n\n    if (showHandle) {\n      $('<div/>')\n        .addClass('ni_block_topbar_item handle')\n        .prop('data-neo-b', `${this._id}.container.handle`)\n        .append(Craft.ui.createCopyTextBtn({\n          id: `${baseInputId}-${type.getHandle()}-attribute`,\n          class: ['code', 'small', 'light'],\n          value: type.getHandle()\n        }))\n        .insertAfter($elementHtml.find('.ni_block_topbar_item.title'))\n    }\n\n    return $elementHtml\n  },\n\n  initUi (callInitUiElements = true) {\n    if (this._initialised) {\n      // Nothing to do here\n      return\n    }\n\n    this.$foot = $(this._blockType.getJs(this._id)).filter(_resourceFilter)\n    Garnish.$bod.append(this.$foot)\n\n    if (callInitUiElements) {\n      Craft.initUiElements(this.$contentContainer)\n    }\n\n    this.$form = this.$container.closest('form')\n    this.initTabs()\n\n    this._settingsMenu = this.$settingsButton.data('trigger') || new Garnish.DisclosureMenu(this.$settingsButton)\n    this._settingsMenu.on('show', () => {\n      // Make sure all other blocks in the field have their settings menus closed\n      this._field\n        .getBlocks()\n        .filter((block) => block.$container.hasClass('active'))\n        .forEach((block) => block.toggleSettingsMenu(false))\n      this.$container.addClass('active')\n    })\n    this._settingsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$menuContainer = this._settingsMenu.$container\n    this.addListener(this.$menuContainer.find('[data-action]'), 'click', this._handleActionClick)\n    this.addListener(this.$menuContainer.find('[data-action]'), 'keydown', this._handleActionKeydown)\n\n    this.toggleEnabled(this._initialEnabled)\n\n    this._initialised = true\n    this._buttons?.initUi()\n\n    Garnish.requestAnimationFrame(() => this.updateResponsiveness())\n\n    // For Matrix blocks inside a Neo block, this listener adds a class name to the block for Neo to style.\n    // Neo applies its own styles to Matrix blocks in an effort to improve the visibility of them, however\n    // when dragging a Matrix block these styles get lost (since a dragged Matrix block loses its context of\n    // being inside a Neo block). Adding this class name to blocks before they are dragged means that the\n    // dragged Matrix block can still have the Neo-specific styles.\n    this.$container.on('mousedown', '.matrixblock', function (e) {\n      $(this).addClass('neo-matrixblock')\n    })\n\n    // If this block has errors and is nested somewhere in a child blocks UI element, set errors on ancestors' tabs\n    if (this.$container.hasClass('has-errors')) {\n      this.$container.parents('.ni_child-blocks-ui-element').each((_, cbuiElement) => {\n        const $tabContent = $(cbuiElement).parent()\n        const parentBlock = $tabContent.closest('.ni_block').data('block')\n        const tabIndex = $tabContent.index()\n        parentBlock.$tabButton.filter('.tab').eq(tabIndex) // Desktop tab buttons\n          .add(parentBlock.$tabButton.filter(':not(.tab)').eq(tabIndex)) // Mobile tab buttons\n          .add(parentBlock.$container.find('> .ni_block_topbar .tabs_btn')) // Mobile tab dropdown button\n          .addClass('has-errors')\n          .append(`<span data-icon=\"alert\" aria-label=\"${Craft.t('neo', 'Error')}\"></span>`)\n      })\n    }\n\n    // Setting up field and block property watching\n    if (!this.isNew()) {\n      this._initialState = {\n        enabled: this._enabled,\n        level: this._level,\n        content: this._getPostData()\n      }\n\n      const detectChange = () => this._detectChange()\n      const observer = new window.MutationObserver(() => {\n        setTimeout(detectChange, 200)\n\n        // Ensure blocks that are supposed to be non-editable by the user remain so\n        if (!this.getBlockType().isEditableByUser() && !this.$container.hasClass('is-disabled-for-user')) {\n          this.$container.addClass('is-disabled-for-user')\n        }\n      })\n\n      observer.observe(this.$container[0], {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      })\n\n      this.$contentContainer.on('propertychange change click', 'input, textarea, select, div.redactor-in', detectChange)\n      this.$contentContainer.on('paste input keyup', 'input:not([type=\"hidden\"]), textarea, div.redactor-in', detectChange)\n\n      this._detectChangeObserver = observer\n\n      // Hide the copy/paste/clone options if the block type is disabled\n      this.$menuContainer\n        .find('[data-action=\"copy\"], [data-action=\"paste\"], [data-action=\"duplicate\"]')\n        .parent()\n        .toggleClass('hidden', !this._blockType.getEnabled())\n    }\n\n    addFieldLinks(this.$contentContainer)\n\n    this.trigger('initUi')\n  },\n\n  /**\n   * @public\n   * @since 3.7.0\n   */\n  initTabs () {\n    const $neo = this.$container.find('[data-neo-b]')\n    this.$tabsButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tabs\"]`)\n    this.$tabsContainer = $neo.filter(`[data-neo-b=\"${this._id}.container.tabs\"]`)\n    this.$tabButton = $neo.filter(`[data-neo-b=\"${this._id}.button.tab\"]`)\n    this.$tabContainer = this.$contentContainer.children('[data-layout-tab]')\n\n    this._tabsMenu = this.$tabsButton.data('trigger') || new Garnish.DisclosureMenu(this.$tabsButton)\n    this._tabsMenu.on('show', () => this.$container.addClass('active'))\n    this._tabsMenu.on('hide', () => this.$container.removeClass('active'))\n\n    this.$tabButton = this.$tabButton.add(this._tabsMenu.$container.find(`[data-neo-b=\"${this._id}.button.tab\"]`))\n    this.addListener(this.$tabButton, 'click', this['@setTab'])\n    this.addListener(this.$tabButton, 'keydown', this._handleTabKeydown)\n  },\n\n  destroy () {\n    if (this._initialised) {\n      this.$foot.remove()\n\n      clearInterval(this._detectChangeInterval)\n\n      if (this._detectChangeObserver) {\n        this._detectChangeObserver.disconnect()\n      }\n\n      this.trigger('destroy')\n    }\n  },\n\n  getBlockType () {\n    return this._blockType\n  },\n\n  getId () {\n    return this._id\n  },\n\n  /**\n   * @public\n   * @returns the ID of the duplicate block, or the ID of this block if it hasn't been duplicated\n   * @since 3.7.0\n   */\n  getDuplicatedBlockId () {\n    return this.$form.data('elementEditor')?.duplicatedElements[this._id] ?? this._id\n  },\n\n  isTopLevel () {\n    return this._level === 1\n  },\n\n  getLevel () {\n    return this._level\n  },\n\n  setLevel (level) {\n    this._level = level | 0\n\n    this.$levelInput.val(`0${this._level}`)\n    this.$container.toggleClass('is-level-odd', !!(this._level % 2))\n    this.$container.toggleClass('is-level-even', !(this._level % 2))\n  },\n\n  setModified (isModified) {\n    this._modified = isModified\n  },\n\n  getButtons () {\n    return this._buttons\n  },\n\n  getSiteId () {\n    if (!this._siteId) {\n      const $siteId = this.$form.find('input[name=\"siteId\"]')\n      this._siteId = $siteId.val()\n    }\n\n    return this._siteId\n  },\n\n  getContent () {\n    const rawContent = this._getPostData()\n    const content = {}\n\n    const setValue = (keys, value) => {\n      let currentSet = content\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i]\n\n        if (!$.isPlainObject(currentSet[key]) && !Array.isArray(currentSet[key])) {\n          currentSet[key] = {}\n        }\n\n        currentSet = currentSet[key]\n      }\n\n      const key = keys[keys.length - 1]\n      currentSet[key] = value\n    }\n\n    for (const rawName of Object.keys(rawContent)) {\n      const fullName = NS.parse(rawName)\n      const name = fullName.slice(this._templateNs.length + 1) // Adding 1 because content is NS'd under [fields]\n\n      // Make sure empty arrays (which can happen with level, enabled, etc. when using the child blocks UI element) are ignored\n      if (!name.length) {\n        continue\n      }\n\n      const value = rawContent[rawName]\n\n      setValue(name, value)\n    }\n\n    return content\n  },\n\n  getParent (blocks = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    let blockParent = null\n\n    if (index >= 0 && level > 1) {\n      while (blockParent === null && index > 0) {\n        const currentBlock = blocks[--index]\n        const currentLevel = currentBlock.getLevel()\n\n        if (currentLevel === level - 1) {\n          blockParent = currentBlock\n        }\n      }\n    }\n\n    return blockParent\n  },\n\n  getChildren (blocks = null, descendants = null) {\n    blocks ??= this._field.getBlocks()\n    const level = this.getLevel()\n    let index = blocks.indexOf(this)\n    const childBlocks = []\n\n    if (index >= 0) {\n      let currentBlock = blocks[++index]\n\n      while (currentBlock && currentBlock.getLevel() > level) {\n        const currentLevel = currentBlock.getLevel()\n\n        if (descendants ? currentLevel > level : currentLevel === level + 1) {\n          childBlocks.push(currentBlock)\n        }\n\n        currentBlock = blocks[++index]\n      }\n    }\n\n    return childBlocks\n  },\n\n  getSiblings (blocks = null) {\n    blocks ??= this._field.getBlocks()\n\n    return this.isTopLevel() ? blocks.filter(b => b.isTopLevel()) : this.getParent(blocks).getChildren(blocks)\n  },\n\n  getField () {\n    return this._field\n  },\n\n  updatePreview (condensed = null) {\n    condensed = typeof condensed === 'boolean' ? condensed : false\n\n    const $childFields = this.$childrenContainer.find('.field')\n    const $fields = this.$contentContainer.find('.field').add($childFields)\n    const previewText = []\n\n    $fields.each(function () {\n      const $field = $(this)\n      const $input = $field.children('.input')\n      const fieldType = $field.data('type')\n      const label = $field.children('.heading').children('label').text()\n\n      // We rely on knowing the field type to know how to generate its preview, so if we don't know, skip it.\n      if (fieldType === null) {\n        return\n      }\n\n      let value = false\n\n      switch (fieldType) {\n        case 'craft\\\\fields\\\\Assets':\n          {\n            const values = []\n            const $assets = $input.find('.element')\n\n            $assets.each(function () {\n              const $asset = $(this)\n              const $thumbContainer = $asset.find('.elementthumb')\n              const $thumb = $thumbContainer.children('img')\n              let srcset = $thumb.prop('srcset')\n\n              if (!srcset) {\n                srcset = $thumbContainer.data('srcset')\n              }\n\n              values.push(`<img sizes=\"30px\" srcset=\"${srcset}\">`)\n\n              if (!condensed && $assets.length === 1) {\n                const title = $asset.find('.title').text()\n\n                values.push(_escapeHTML(_limit(title)))\n              }\n            })\n\n            value = values.join(' ')\n          }\n          break\n        case 'craft\\\\fields\\\\Categories':\n        case 'craft\\\\fields\\\\Entries':\n        case 'craft\\\\fields\\\\Tags':\n        case 'craft\\\\fields\\\\Users':\n          {\n            const values = []\n\n            $input.find('.element').each(function () {\n              const title = $(this).find('.title, .label').eq(0).text()\n              values.push(_escapeHTML(_limit(title)))\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Checkboxes':\n          {\n            const values = []\n\n            $input.find('input[type=\"checkbox\"]').each(function () {\n              if (this.checked) {\n                const id = $(this).prop('id')\n                const label = $input.find(`label[for=\"${id}\"]`).text()\n                values.push(_escapeHTML(_limit(label)))\n              }\n            })\n\n            value = values.join(', ')\n          }\n          break\n        case 'craft\\\\fields\\\\Color':\n          {\n            const color = $input.find('input[type=\"color\"]').val()\n            const colorText = $input.find('input[type=\"text\"]').val()\n            const colorRev = $input.find('div.colorhex').text()\n            let background = null\n\n            if (color && colorText) {\n              // Set the selected color.  `colorText` must also be checked, even though it's not used, because\n              // the color type field may still store a color value even if the text field has been cleared.\n              background = `background-color: ${color}`\n            } else if (!color && colorText) {\n              // When a block is initially collapsed, the color type field will not have been set, so the text\n              // field value will need to be used.\n              background = `background-color: ${colorText}`\n            } else if (colorRev) {\n              // Entry revisions will hav a div rather than an input, so use that.\n              background = `background-color: ${colorRev}`\n            } else {\n              // No color value has been set for the field.\n              background = 'background-image: repeating-linear-gradient(-45deg, transparent, transparent 2px, #777 2px, #777 3px)'\n            }\n\n            value = `<div class=\"preview_color\" style=\"${background}\"></div>`\n          }\n          break\n        case 'craft\\\\fields\\\\Date':\n          {\n            const date = _escapeHTML($input.find('.datewrapper input').val())\n            const time = _escapeHTML($input.find('.timewrapper input').val())\n\n            value = date && time ? (date + ' ' + time) : (date || time)\n          }\n          break\n        case 'craft\\\\fields\\\\Dropdown':\n          {\n            const $selected = $input.find('select').children(':selected')\n\n            value = _escapeHTML(_limit($selected.text()))\n          }\n          break\n        case 'craft\\\\fields\\\\Email':\n          value = _escapeHTML(_limit($input.children('input[type=\"email\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Lightswitch':\n          {\n            const enabled = !!$input.find('input').val()\n\n            value = `<span class=\"status${enabled ? ' live' : ''}\"></span>` + _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\fields\\\\MultiSelect':\n        case 'ttempleton\\\\categorygroupsfield\\\\fields\\\\CategoryGroupsField':\n          {\n            const values = []\n            const $selected = $input.find('select').children(':selected')\n\n            $selected.each(function () {\n              values.push($(this).text())\n            })\n\n            value = _escapeHTML(_limit(values.join(', ')))\n          }\n          break\n        case 'craft\\\\fields\\\\Number':\n        case 'craft\\\\fields\\\\PlainText':\n          value = _escapeHTML(_limit($input.children('input[type=\"text\"], textarea').val()))\n          break\n        case 'craft\\\\fields\\\\RadioButtons':\n          {\n            const $checked = $input.find('input[type=\"radio\"]:checked')\n            const label = $checked.closest('label').text()\n\n            value = _escapeHTML(_limit(label))\n          }\n          break\n        case 'craft\\\\redactor\\\\Field':\n        case 'spicyweb\\\\tinymce\\\\fields\\\\TinyMCE':\n          value = _escapeHTML(_limit(Craft.getText($input.find('textarea').val())))\n          break\n        case 'craft\\\\ckeditor\\\\Field':\n          value = _escapeHTML(_limit(Craft.getText($input.find('[role=\"textbox\"]').html())))\n          break\n        case 'craft\\\\fields\\\\Url':\n          value = _escapeHTML(_limit($input.children('input[type=\"url\"]').val()))\n          break\n        case 'craft\\\\fields\\\\Matrix':\n        case 'verbb\\\\supertable\\\\fields\\\\SuperTableField':\n          {\n            const $subFields = $field.find('.field')\n            const $subInputs = $subFields.find('input[type!=\"hidden\"], select, textarea, .label')\n\n            const values = []\n\n            $subInputs.each(function () {\n              const $subInput = $(this)\n              let subValue = null\n\n              if ($subInput.is('input, textarea')) {\n                subValue = Craft.getText(Garnish.getInputPostVal($subInput))\n              } else if ($subInput.is('select')) {\n                subValue = $subInput.find('option:selected').text()\n              } else if ($subInput.hasClass('label')) {\n                // TODO check for lightswitch maybe?\n                subValue = $subInput.text()\n              }\n\n              if (subValue) {\n                values.push(_limit(subValue))\n              }\n            })\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'typedlinkfield\\\\fields\\\\LinkField':\n        case 'presseddigital\\\\linkit\\\\fields\\\\LinkitField':\n          {\n            const values = []\n            const $selectedType = $input.find('select').children(':selected').first()\n            const $visibleOption = $input.find('.linkfield--typeOption:not(.hidden), [class^=\"linkit--\"]:not(.hidden)')\n            const visibleInputVal = $visibleOption.find('input[type!=\"hidden\"]').val()\n            const $visibleElement = $visibleOption.find('.element')\n            const customText = $input.find('.field[id*=\"customText\"] input, .linkit--customText input').val()\n\n            values.push(_limit($selectedType.text()))\n\n            if (visibleInputVal) {\n              values.push(_limit(visibleInputVal))\n            }\n\n            if ($visibleElement.length > 0) {\n              const title = $visibleElement.find('.title, .label').eq(0).text()\n\n              values.push(_limit(title))\n            }\n\n            if (customText) {\n              values.push(_limit(customText))\n            }\n\n            value = _escapeHTML(values.join(', '))\n          }\n          break\n        case 'luwes\\\\codemirror\\\\fields\\\\CodeMirrorField':\n        {\n          const lines = []\n\n          $field.find('.CodeMirror-line > span').each(function () {\n            lines.push($(this).text())\n          })\n\n          value = _escapeHTML(lines.join(' '))\n          break\n        }\n        case 'rias\\\\positionfieldtype\\\\fields\\\\Position':\n        {\n          const $selected = $input.find('.btn.active')\n\n          value = _escapeHTML($selected.prop('title'))\n          break\n        }\n        case 'wrav\\\\oembed\\\\fields\\\\OembedField':\n          value = _escapeHTML(_limit($input.children('input').val()))\n      }\n\n      if (value && previewText.length < 10) {\n        previewText.push('<span class=\"preview_section\">', value, '</span>')\n      }\n    })\n\n    this.$previewContainer.html(previewText.join(''))\n  },\n\n  isNew () {\n    return /^new/.test(this.getId())\n  },\n\n  isSelected () {\n    return this.$container.hasClass('is-selected')\n  },\n\n  collapse (save, animate) {\n    this.toggleExpansion(false, save, animate)\n  },\n\n  expand (save, animate) {\n    this.toggleExpansion(true, save, animate)\n  },\n\n  toggleExpansion (expand, save, animate) {\n    expand = typeof expand === 'boolean' ? expand : !this._expanded\n    save = typeof save === 'boolean' ? save : true\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (expand !== this._expanded) {\n      this._expanded = expand\n\n      if (!this._expanded) {\n        this.updatePreview()\n      }\n\n      const expandContainer = this.$menuContainer.find('[data-action=\"expand\"]').parent()\n      const collapseContainer = this.$menuContainer.find('[data-action=\"collapse\"]').parent()\n\n      this.$collapsedInput.val(!this._expanded ? '1' : '')\n      this.$container\n        .toggleClass('is-expanded', this._expanded)\n        .toggleClass('is-collapsed', !this._expanded)\n\n      expandContainer.toggleClass('hidden', this._expanded)\n      collapseContainer.toggleClass('hidden', !this._expanded)\n      this.$previewContainer.toggleClass('hidden', this._expanded)\n\n      const contentHeight = this.$contentContainer.outerHeight() | 0\n      const childrenHeight = this.$childrenContainer.outerHeight() | 0\n\n      const expandedCss = {\n        opacity: 1,\n        height: contentHeight + childrenHeight\n      }\n      const collapsedCss = {\n        opacity: 0,\n        height: 0\n      }\n      const clearCss = {\n        opacity: '',\n        height: ''\n      }\n\n      if (animate) {\n        this.$bodyContainer\n          .css(this._expanded ? collapsedCss : expandedCss)\n          .velocity(this._expanded ? expandedCss : collapsedCss, 'fast', e => {\n            if (this._expanded) {\n              this.$bodyContainer.css(clearCss)\n            }\n          })\n      } else {\n        this.$bodyContainer.css(this._expanded ? clearCss : collapsedCss)\n      }\n\n      if (save) {\n        this.saveExpansion()\n      }\n\n      this.trigger('toggleExpansion', {\n        expanded: this._expanded\n      })\n    }\n  },\n\n  isExpanded () {\n    return this._expanded\n  },\n\n  saveExpansion () {\n    if (!this.isNew()) {\n      // Use the duplicated block ID if we're on a new provisional draft\n      // The server-side code will also apply the new state to the canonical block\n      const sentBlockId = this.$form.data('elementEditor')?.settings.isProvisionalDraft\n        ? this.getDuplicatedBlockId()\n        : this.getId()\n      const data = {\n        expanded: this.isExpanded() ? 1 : 0,\n        blockId: sentBlockId,\n        siteId: this.getSiteId()\n      }\n\n      Craft.queue.push(() => new Promise((resolve, reject) => {\n        Craft.sendActionRequest('POST', 'neo/input/save-expansion', { data }).then(resolve).catch(reject)\n      }))\n    }\n  },\n\n  disable () {\n    this.toggleEnabled(false)\n  },\n\n  enable () {\n    this.toggleEnabled(true)\n  },\n\n  toggleEnabled (enable = !this._enabled) {\n    const triggerEvent = this._enabled !== enable\n    this._enabled = enable\n\n    const blockTypeEnabled = this._blockType.getEnabled()\n    const actuallyEnabled = this._enabled && blockTypeEnabled\n    const enableContainer = this.$menuContainer.find('[data-action=\"enable\"]').parent()\n    const disableContainer = this.$menuContainer.find('[data-action=\"disable\"]').parent()\n\n    this.$container\n      .toggleClass('is-enabled', actuallyEnabled)\n      .toggleClass('is-disabled', !actuallyEnabled)\n\n    this.$status.toggleClass('hidden', actuallyEnabled)\n\n    enableContainer.toggleClass('hidden', this._enabled || !blockTypeEnabled)\n    disableContainer.toggleClass('hidden', !this._enabled || !blockTypeEnabled)\n\n    this.$enabledInput.val(this._enabled ? '1' : '')\n\n    if (triggerEvent) {\n      this.trigger('toggleEnabled', {\n        enabled: this._enabled\n      })\n    }\n  },\n\n  isEnabled () {\n    return this._enabled\n  },\n\n  toggleShowButtons (show = !this._showButtons) {\n    this.$buttonsContainer.toggleClass('hidden', !show)\n    this.$childrenWarningsContainer.toggleClass('hidden', show)\n  },\n\n  selectTab (tabName) {\n    this.$tabButton.removeClass('is-selected')\n    this.$tabContainer.addClass('hidden')\n    const $tabButton = this.$tabButton.filter(`[data-neo-b-info=\"${tabName}\"]`).addClass('is-selected')\n    const tabUid = $tabButton.attr('data-neo-b-tabuid')\n    const $tabContainer = this.$tabContainer\n      .filter(`[data-layout-tab=\"${tabUid}\"]`)\n      .removeClass('hidden')\n    this.$tabsButton.text(tabName)\n    Craft.ElementThumbLoader.retryAll()\n\n    this.trigger('selectTab', { tabName, $tabButton, $tabContainer })\n  },\n\n  updateResponsiveness () {\n    const isMobileBrowser = Garnish.isMobileBrowser()\n    this._topbarLeftWidth ??= this.$topbarLeftContainer.width() -\n      (this._expanded ? 0 : this.$previewContainer.width()) -\n      (isMobileBrowser ? this.$handleContainer.width() : 0)\n    this._topbarRightWidth ??= this.$topbarRightContainer.width()\n    const hasRoomForIndividualTabs = this.$topbarContainer.width() < this._topbarLeftWidth + this._topbarRightWidth\n\n    this.$handleContainer.toggleClass('hidden', isMobileBrowser)\n    this.$tabsContainer.toggleClass('invisible', hasRoomForIndividualTabs)\n    this.$tabsButton.toggleClass('invisible', !hasRoomForIndividualTabs)\n  },\n\n  updateActionsMenu () {\n    const blocks = this._field.getBlocks()\n    const parentBlockType = this.getParent()?.getBlockType()\n    let allowedBlockTypes = parentBlockType?.getChildBlocks() ?? this._field.getBlockTypes(true)\n\n    if (allowedBlockTypes === true || allowedBlockTypes === '*') {\n      allowedBlockTypes = this._field.getBlockTypes(false)\n    } else if (Array.isArray(allowedBlockTypes)) {\n      allowedBlockTypes = allowedBlockTypes\n        .map(bt => typeof bt === 'string' ? this._field.getBlockTypeByHandle(bt) : bt)\n        // In case any otherwise valid block types are being filtered out by the event or conditions\n        .filter(bt => typeof bt !== 'undefined')\n    }\n\n    // Finally, only allow block types that are allowed to be created by the current user\n    // This is safe since allowedBlockTypes is only used to check if paste/add block actions should be disabled\n    allowedBlockTypes = allowedBlockTypes.filter((bt) => bt.isCreatableByUser())\n\n    this.updateMenuStates(\n      this._field.getName(),\n      blocks,\n      this._field.getMaxBlocks(),\n      true,\n      allowedBlockTypes,\n      this._level === 1 ? this._field.getMaxTopBlocks() : 0\n    )\n  },\n\n  // Deprecated in 3.0.4; use `updateActionsMenu()` instead\n  updateMenuStates (field, blocks = [], maxBlocks = 0, additionalCheck = null, allowedBlockTypes = false, maxTopBlocks = 0) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n    const noAllowedBlockTypes = !allowedBlockTypes || allowedBlockTypes.length === 0\n\n    const blockType = this.getBlockType()\n    const blocksOfType = blocks.filter(b => b.getBlockType().getHandle() === blockType.getHandle())\n    const maxBlockTypes = blockType.getMaxBlocks()\n    const siblingBlocks = this.getSiblings(blocks)\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n\n    const maxBlocksMet = maxBlocks > 0 && blocks.length >= maxBlocks\n    const maxTopBlocksMet = maxTopBlocks > 0 && totalTopBlocks >= maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n    const addDisabled = allDisabled || noAllowedBlockTypes\n    const typeDisabled = maxBlockTypes > 0 && blocksOfType.length >= maxBlockTypes\n    let cloneDisabled = allDisabled || typeDisabled\n\n    const pasteData = JSON.parse(window.localStorage.getItem(`neo:copy:${field}`) || '{}')\n    let pasteDisabled = allDisabled || !pasteData.blocks || !pasteData.field || pasteData.field !== field\n\n    // Test to see if pasting/cloning would exceed the parent's max child blocks\n    const parentBlock = this.getParent(blocks)\n    if ((!pasteDisabled || !cloneDisabled) && parentBlock) {\n      const maxChildBlocks = parentBlock.getBlockType().getMaxChildBlocks()\n\n      if (maxChildBlocks > 0) {\n        const childBlockCount = parentBlock.getChildren(blocks).length\n        const pasteBlockCount = pasteData.blocks?.length ?? 0\n        pasteDisabled ||= childBlockCount + pasteBlockCount > maxChildBlocks\n        cloneDisabled ||= childBlockCount >= maxChildBlocks\n      }\n    }\n\n    // Test to see if pasting would exceed this block's max sibling blocks\n    if (!(pasteDisabled && cloneDisabled)) {\n      const maxSiblingBlocks = this.getBlockType().getMaxSiblingBlocks()\n\n      if (maxSiblingBlocks > 0) {\n        const hasSameBlockType = block => {\n          if (Object.prototype.hasOwnProperty.call(block, 'type')) {\n            return block.type === this.getBlockType().getId()\n          } else if (typeof block.getBlockType === 'function') {\n            return block.getBlockType().getHandle() === this.getBlockType().getHandle()\n          }\n\n          return false\n        }\n\n        const siblingBlockCount = siblingBlocks.filter(hasSameBlockType, this).length\n        const pasteSiblingBlockCount = pasteData.blocks ? pasteData.blocks.filter(hasSameBlockType, this).length : 0\n        pasteDisabled ||= siblingBlockCount + pasteSiblingBlockCount > maxSiblingBlocks\n        cloneDisabled ||= siblingBlockCount >= maxSiblingBlocks\n      }\n    }\n\n    if (!pasteDisabled) {\n      const currentBlockTypesById = blocks.reduce((m, b) => {\n        const bt = b.getBlockType()\n        const id = bt.getId()\n        const v = m[id] || { blockType: bt, count: 0 }\n\n        v.count++\n        m[id] = v\n\n        return m\n      })\n\n      for (const pasteBlock of pasteData.blocks) {\n        const pasteBlockTypeObj = currentBlockTypesById[pasteBlock.type]\n\n        // Test to see if any max block types properties will be violated\n        if (pasteBlockTypeObj) {\n          const pasteBlockType = pasteBlockTypeObj.blockType\n          const currentBlocksOfTypeCount = pasteBlockTypeObj.count\n          const maxPasteBlockTypes = pasteBlockType.getMaxBlocks()\n          const pasteTypeDisabled = maxPasteBlockTypes > 0 && currentBlocksOfTypeCount >= maxPasteBlockTypes\n\n          pasteDisabled ||= pasteTypeDisabled\n        }\n\n        // Test to see if the top level paste blocks have a block type that is allowed to be pasted here\n        if (pasteBlock.level === 1) {\n          pasteDisabled ||= !allowedBlockTypes.find(bt => bt.getId() === pasteBlock.type)\n        }\n      }\n    }\n\n    const siblingIndex = siblingBlocks.indexOf(this)\n    const disableMoveUp = siblingIndex <= 0\n    const disableMoveDown = [-1, siblingBlocks.length - 1].includes(siblingIndex)\n\n    this.$menuContainer.find('[data-action=\"moveUp\"]').parent().toggleClass('hidden', disableMoveUp)\n    this.$menuContainer.find('[data-action=\"moveDown\"]').parent().toggleClass('hidden', disableMoveDown)\n    this.$menuContainer.find('[data-action=\"duplicate\"]').toggleClass('disabled', cloneDisabled)\n\n    // Paste/add actions should be hidden if there is no chance of them being enabled later\n    if (noAllowedBlockTypes) {\n      this.$menuContainer.find('[data-action=\"add\"]').parent().toggleClass('hidden', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').parent().toggleClass('hidden', pasteDisabled)\n    } else {\n      this.$menuContainer.find('[data-action=\"add\"]').toggleClass('disabled', addDisabled)\n      this.$menuContainer.find('[data-action=\"paste\"]').toggleClass('disabled', pasteDisabled)\n    }\n\n    // If there are no visible items in the second list, hide the separator as well\n    this.$menuContainer.children('hr').toggleClass(\n      'hidden',\n      this.$menuContainer.children('ul:last-child').children('li:not(.hidden)').length === 0\n    )\n  },\n\n  resetButtons (settings) {\n    this.$blocksContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.blocks\"]`)\n    this.$buttonsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.buttons\"]`)\n    this.$childrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.children\"]`)\n    this.$childrenWarningsContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.childrenWarnings\"]`)\n    this.$collapsedChildrenContainer = this.$container.find(`[data-neo-b=\"${this._id}.container.collapsedChildren\"]`)\n\n    if (typeof settings !== 'undefined' && settings !== null) {\n      this._buttons = settings\n    } else {\n      this._buttons = new this._field.ButtonClass({\n        $ownerContainer: this.$container,\n        field: this._field,\n        items: this._blockType.getChildBlockItems(this._field.getItems()),\n        maxBlocks: this._field.getMaxBlocks()\n      })\n    }\n\n    if (this._buttons) {\n      this._buttons.on('newBlock', e => this.trigger('newBlock', Object.assign(e, { level: this.getLevel() + 1 })))\n      this.$buttonsContainer.append(this._buttons.$container)\n\n      if (this._buttons.$ownerContainer === null) {\n        this._buttons.$ownerContainer = this.$container\n      }\n\n      if (this._initialised) {\n        this._buttons.initUi()\n      }\n    }\n  },\n\n  namespaceId (id) {\n    NS.enter(this._templateNs)\n    const namespacedId = `${NS.toString('-')}-${Craft.formatInputId(id)}`\n    NS.leave()\n    return namespacedId\n  },\n\n  toggleSettingsMenu (toggle) {\n    toggle ??= !this._settingsMenu.isExpanded()\n    if (toggle) {\n      this._settingsMenu.show()\n    } else {\n      this._settingsMenu.hide()\n    }\n  },\n\n  _handleActionClick (e) {\n    e.preventDefault()\n    this['@settingSelect'](e)\n  },\n\n  _handleActionKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      e.preventDefault()\n      this['@settingSelect'](e)\n    }\n  },\n\n  _handleTabKeydown (e) {\n    if (e.keyCode === Garnish.SPACE_KEY) {\n      this['@setTab'](e)\n    }\n  },\n\n  _detectChange () {\n    // When editing a draft and autosave is enabled, we need to force modified to be set, or\n    // returning the block to its original values will cause it not to be resaved.\n    const elementEditor = this.$form.data('elementEditor')\n\n    if (elementEditor?.enableAutosave && elementEditor.settings.draftId) {\n      this.setModified(true)\n      this._forceModified = true\n    }\n\n    if (!this._forceModified) {\n      const initial = this._initialState\n      const content = this._getPostData()\n\n      const modified = !Craft.compare(content, initial.content, false) ||\n        initial.enabled !== this._enabled ||\n        initial.level !== this._level\n\n      if (modified !== this._modified) {\n        this.setModified(modified)\n      }\n    }\n\n    this.trigger('change')\n  },\n\n  _getPostData () {\n    const content = Garnish.getPostData(this.$contentContainer)\n    // Remove keys associated with child block subfields (occurs when using child blocks UI element)\n    const badKeys = Object.keys(content)\n      .filter((key) => !key.startsWith(`fields[${this._field.getName()}][blocks][${this._id}]`))\n\n    for (const key of badKeys) {\n      delete content[key]\n    }\n\n    return content\n  },\n\n  '@settingSelect' (e) {\n    this._settingsMenu.hide()\n    const $option = $(e.target)\n\n    if (!$option.hasClass('disabled')) {\n      switch ($option.attr('data-action')) {\n        case 'collapse':\n          this.collapse()\n          break\n        case 'expand':\n          this.expand()\n          break\n        case 'disable':\n          this.disable()\n          this.collapse()\n          break\n        case 'enable':\n          this.enable()\n          this.expand()\n          break\n        case 'moveUp':\n          this.trigger('moveUpBlock', { block: this })\n          break\n        case 'moveDown':\n          this.trigger('moveDownBlock', { block: this })\n          break\n        case 'delete':\n          this.trigger('removeBlock', { block: this })\n          break\n        case 'add':\n          this.trigger('addBlockAbove', { block: this })\n          break\n        case 'copy':\n          this.trigger('copyBlock', { block: this })\n          break\n        case 'paste':\n          this.trigger('pasteBlock', { block: this })\n          break\n        case 'duplicate':\n          this.trigger('duplicateBlock', { block: this })\n          break\n      }\n    }\n  },\n\n  '@doubleClickTitle' (e) {\n    e.preventDefault()\n\n    const $target = $(e.target)\n    const $checkFrom = $target.parent()\n    const isLeft = $checkFrom.closest(this.$topbarLeftContainer).length > 0\n    const isRight = $checkFrom.closest(this.$topbarRightContainer).length > 0\n\n    if (!isLeft && !isRight) {\n      this.$form.data('elementEditor')?.pause()\n      this.toggleExpansion()\n      this.$form.data('elementEditor')?.resume()\n    }\n  },\n\n  '@setTab' (e) {\n    e.preventDefault()\n    this._tabsMenu.hide()\n\n    const $tab = $(e.currentTarget)\n    const tabName = $tab.attr('data-neo-b-info')\n\n    this.selectTab(tabName)\n  }\n},\n{\n  _totalNewBlocks: 0,\n\n  getNewId () {\n    return `new${this._totalNewBlocks++}`\n  }\n})\n","import Craft from 'craft'\n\nexport function addFieldLinks ($element) {\n  if (Craft.CpFieldInspectPlugin) {\n    Craft.CpFieldInspectPlugin.addFieldLinks()\n  }\n}\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport Garnish from 'garnish'\n\nconst _defaults = {\n  $ownerContainer: null,\n  blockTypes: [],\n  groups: [],\n  items: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  blocks: null\n}\n\nclass NewBlockMenu {\n  static BUTTON_INFO = 'data-neo-bn-info'\n  _blockTypes = []\n  _blockTypeGroups = []\n\n  constructor (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    if (settings.items) {\n      this._items = Array.from(settings.items)\n      this._blockTypes = this._items.filter(i => i.getType() === 'blockType')\n      this._blockTypeGroups = this._items.filter(i => i.getType() === 'group')\n    } else {\n      this._blockTypes = Array.from(settings.blockTypes)\n      this._blockTypeGroups = Array.from(settings.groups)\n      this._items = [...this._blockTypes, ...this._blockTypeGroups].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n    }\n\n    this.$ownerContainer = settings.$ownerContainer\n    this._field = settings.field\n    this._maxBlocks = settings.maxBlocks | 0\n    this._maxTopBlocks = settings.maxTopBlocks | 0\n\n    this.$container = this.renderButtons()\n\n    const $neo = this.$container.find('[data-neo-bn]')\n    this.$buttonsContainer = $neo.filter('[data-neo-bn=\"container.buttons\"]')\n    this.$menuContainer = $neo.filter('[data-neo-bn=\"container.menu\"]')\n    this.$blockButtons = $neo.filter('[data-neo-bn=\"button.addBlock\"]')\n    this.$groupButtons = $neo.filter('[data-neo-bn=\"button.group\"]')\n\n    if (settings.blocks) {\n      this.updateState(settings.blocks)\n    }\n  }\n\n  /**\n   * @since 3.6.0\n   * @protected\n   * @returns string\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let blockTypesHtml = []\n    let currentGroup = null\n    let firstButton = true\n\n    const generateGroupDropdown = () => {\n      buttonsHtml.push(`\n          <div class=\"btn dashed${firstButton ? ' add icon' : ''} menubtn\" data-neo-bn=\"button.group\">\n            ${currentGroup.getName()}\n          </div>\n          <div class=\"menu\">\n            <ul>${blockTypesHtml.join('')}\n            </ul>\n          </div>`)\n      firstButton = false\n      blockTypesHtml = []\n    }\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btngroup\" data-neo-bn=\"container.buttons\">`)\n\n    for (let i = 0; i < this._items.length; i++) {\n      const item = this._items[i]\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n\n        if (currentGroup !== null) {\n          blockTypesHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">${item.getName()}</a>\n            </li>`)\n        } else {\n          buttonsHtml.push(`\n          <button${titleAttr} aria-label=\"${item.getName()}\" class=\"btn dashed${firstButton ? ' add icon' : ''}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n            ${item.getName()}\n          </button>`)\n          firstButton = false\n        }\n      } else if (type === 'group') {\n        if (currentGroup !== null && blockTypesHtml.length > 0) {\n          generateGroupDropdown()\n        }\n\n        if (\n          // Don't show dropdowns for groups with blank names, as they're just used to end the previous group\n          (item.isBlank()) ||\n          // Don't show dropdowns if we're not forcing them to show, and there's only one block type in this group\n          (!item.getAlwaysShowDropdown() && ((i + 2) >= this._items.length || this._items[i + 2].getType() === 'group')) ||\n          // Don't show dropdowns if the block type is set not to group child block types\n          (ungroupChildBlockTypes)\n        ) {\n          currentGroup = null\n        } else {\n          currentGroup = item\n        }\n      }\n    }\n\n    if (currentGroup !== null && blockTypesHtml.length > 0) {\n      generateGroupDropdown()\n    }\n\n    buttonsHtml.push(`\n        </div>\n        <div class=\"btn dashed add icon menubtn hidden\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    // Menu, for views where the buttons would exceed the editor width\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu\">\n          <ul>`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (currentGroup !== null && !lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          buttonsHtml.push(`\n              <h6>${currentGroup.getName()}</h6>\n              <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        buttonsHtml.push(`\n            <li>\n              <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">\n                ${item.getName()}\n              </a>\n            </li>`)\n      } else if (type === 'group') {\n        if (currentGroup === null || lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n              </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n\n        if (currentGroup === null) {\n          buttonsHtml.push(`\n              <ul>`)\n        }\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  getField () {\n    return this._field\n  }\n\n  getBlockTypes () {\n    return Array.from(this._blockTypes)\n  }\n\n  getBlockTypeGroups () {\n    return Array.from(this._blockTypeGroups)\n  }\n\n  getBlockTypeByButton ($button) {\n    const btHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n\n    return this._blockTypes.find(bt => bt.getHandle() === btHandle)\n  }\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    additionalCheck = typeof additionalCheck === 'boolean' ? additionalCheck : true\n\n    const that = this\n\n    const totalTopBlocks = blocks.filter(block => block.isTopLevel()).length\n    const maxBlocksMet = this._maxBlocks > 0 && blocks.length >= this._maxBlocks\n    const maxTopBlocksMet = this._maxTopBlocks > 0 && totalTopBlocks >= this._maxTopBlocks\n\n    const allDisabled = maxBlocksMet || maxTopBlocksMet || !additionalCheck\n\n    this.$blockButtons.each(function () {\n      const $button = $(this)\n      let disabled = allDisabled\n\n      if (!disabled) {\n        const blockHasSameType = b => b.getBlockType().getHandle() === blockType.getHandle()\n        const blockType = that.getBlockTypeByButton($button)\n        const blocksOfType = blocks.filter(blockHasSameType)\n        const maxBlocksOfType = blockType.getMaxBlocks()\n\n        const maxSiblingBlocks = blockType.getMaxSiblingBlocks()\n        const siblingBlocksOfType = block !== null\n          ? block.getChildren(blocks).filter(blockHasSameType)\n          // This is at the top level\n          : blocks.filter(b => b.isTopLevel() && b.getBlockType().getHandle() === blockType.getHandle())\n\n        disabled ||= (maxBlocksOfType > 0 && blocksOfType.length >= maxBlocksOfType) ||\n          (maxSiblingBlocks > 0 && siblingBlocksOfType.length >= maxSiblingBlocks)\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n\n    this.$groupButtons.each(function () {\n      const $button = $(this)\n      const menu = $button.data('menubtn')\n      let disabled = allDisabled\n\n      if (!disabled && menu) {\n        const $menuButtons = menu.menu.$options\n        disabled = $menuButtons.length === $menuButtons.filter('.disabled').length\n      }\n\n      $button.toggleClass('disabled', disabled)\n    })\n  }\n\n  updateResponsiveness () {}\n}\n\nconst GarnishNewBlockMenu = Garnish.Base.extend({\n\n  init (buttons) {\n    this._buttons = buttons\n    this.$container = this._buttons.$container\n    this.addListener(this._buttons.$blockButtons, 'activate', '@newBlock')\n  },\n\n  initUi () {\n    this._buttons.initUi()\n  },\n\n  getBlockTypes () {\n    return this._buttons.getBlockTypes()\n  },\n\n  getGroups () {\n    return this._buttons.getBlockTypeGroups()\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  updateButtonStates (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateState (blocks = [], additionalCheck = null, block = null) {\n    this._buttons.updateState(blocks, additionalCheck, block)\n  },\n\n  updateResponsiveness () {\n    this._buttons.updateResponsiveness()\n  },\n\n  getBlockTypeByButton ($button) {\n    return this._buttons.getBlockTypeByButton($button)\n  },\n\n  '@newBlock' (e) {\n    const $button = $(e.currentTarget)\n    const blockTypeHandle = $button.attr(NewBlockMenu.BUTTON_INFO)\n    const blockType = this._buttons.getBlockTypes().find(bt => bt.getHandle() === blockTypeHandle)\n\n    this.trigger('newBlock', {\n      blockType\n    })\n  }\n})\n\nexport { NewBlockMenu, GarnishNewBlockMenu }\n","import $ from 'jquery'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass Buttons extends NewBlockMenu {\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.children().length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n\n  updateResponsiveness () {\n    this._buttonsContainerWidth ||= this.$buttonsContainer.width()\n    const isMobile = this.$container.width() < this._buttonsContainerWidth\n\n    this.$buttonsContainer.toggleClass('hidden', isMobile)\n    this.$menuContainer.toggleClass('hidden', !isMobile)\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new Buttons(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsGrid extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n        <div class=\"ni_buttons\">\n          <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n            ${Craft.t('neo', 'Add a block')}\n          </div>`)\n\n    currentGroup = null\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n          <div class=\"menu ni_newblockgrid\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblockgrid_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblockgrid_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsGrid(settings))\n  }\n})\n","import $ from 'jquery'\nimport Craft from 'craft'\nimport { NewBlockMenu, GarnishNewBlockMenu } from './NewBlockMenu'\n\nclass ButtonsList extends NewBlockMenu {\n  /**\n   * @inheritdoc\n   */\n  renderButtons () {\n    const ownerBlockType = this.$ownerContainer?.hasClass('ni_block')\n      ? this.$ownerContainer.attr('class').match(/ni_block--([^\\s]+)/)[1]\n      : null\n    const ungroupChildBlockTypes = ownerBlockType !== null &&\n      !this.getField().getBlockTypeByHandle(ownerBlockType).getGroupChildBlockTypes()\n    const buttonsHtml = []\n    let currentGroup = null\n\n    buttonsHtml.push(`\n      <div class=\"ni_buttons\">\n        <div class=\"btn dashed add icon menubtn\" data-neo-bn=\"container.menu\">\n          ${Craft.t('neo', 'Add a block')}\n        </div>`)\n\n    let lastGroupHadBlockTypes = false\n    buttonsHtml.push(`\n        <div class=\"menu ni_newblocklist\" data-neo-bn=\"container.buttons\">`)\n\n    for (const item of this._items) {\n      const type = item.getType()\n\n      if (type === 'blockType') {\n        // Ignore disabled block types, or block types for which the current user isn't allowed to create blocks\n        if (!item.getEnabled() || !item.isCreatableByUser()) {\n          continue\n        }\n\n        if (!lastGroupHadBlockTypes) {\n          lastGroupHadBlockTypes = true\n\n          if (currentGroup !== null) {\n            buttonsHtml.push(`\n            <h6>${currentGroup.getName()}</h6>`)\n          }\n\n          buttonsHtml.push(`\n            <ul class=\"padded\">`)\n        }\n\n        const titleAttr = item.getDescription() ? ` title=\"${item.getDescription()}\"` : ''\n        const blockTypeIconId = `fields-ni-icon-${this.getField().getName()}-${item.getHandle()}`\n        const hasBlockTypeIcon = this._field?.$container.closest('form').find(`#${blockTypeIconId}`).length > 0 ?? false\n        buttonsHtml.push(`\n              <li>\n                <a${titleAttr} class=\"flex\" aria-label=\"${item.getName()}\" data-neo-bn=\"button.addBlock\" ${NewBlockMenu.BUTTON_INFO}=\"${item.getHandle()}\">`)\n\n        if (hasBlockTypeIcon) {\n          buttonsHtml.push(`\n                  <svg class=\"ni_newblocklist_icon\">\n                    <use href=\"#${blockTypeIconId}\"></use>\n                  </svg>`)\n        } else {\n          buttonsHtml.push(`\n                  <div class=\"ni_newblocklist_icon defaulticon\">\n                  </div>`)\n        }\n\n        buttonsHtml.push(`\n                  <span>${item.getName()}</span>\n                </a>\n              </li>`)\n      } else if (type === 'group') {\n        if (lastGroupHadBlockTypes) {\n          buttonsHtml.push(`\n            </ul>`)\n        }\n\n        lastGroupHadBlockTypes = false\n        currentGroup = item.isBlank() || ungroupChildBlockTypes ? null : item\n      }\n    }\n\n    buttonsHtml.push(`\n          </ul>\n        </div>\n      </div>`)\n\n    return $(buttonsHtml.join(''))\n  }\n\n  initUi () {\n    $('.menubtn', this.$container).menubtn()\n    this.updateResponsiveness()\n\n    // If no buttons were rendered (e.g. if all valid block types are disabled for the user), hide the button container\n    if (this.$buttonsContainer.find('[data-neo-bn=\"button.addBlock\"]').length === 0) {\n      const parent = this.$container.parent()\n      const grandParent = parent.parent()\n      const childrenContainer = grandParent.children('.ni_blocks')\n\n      if (childrenContainer.length === 0 || childrenContainer.children().length === 0) {\n        grandParent.addClass('hidden')\n      } else {\n        parent.addClass('hidden')\n      }\n    }\n  }\n}\n\nexport default GarnishNewBlockMenu.extend({\n  init (settings = {}) {\n    this.base(new ButtonsList(settings))\n  }\n})\n","/*\nThe `_registerDynamicBlockConditions()` and `_updateVisibleElements()` methods are based on a large\nsection of `Craft.ElementEditor.saveDraft()` from Craft CMS 4.3.6.1, by Pixel & Tonic, Inc.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/src/web/assets/cp/src/js/ElementEditor.js#L1144\nCraft CMS is released under the terms of the Craft License, a copy of which is included below.\nhttps://github.com/craftcms/cms/blob/4.3.6.1/LICENSE.md\n\nCopyright © Pixel & Tonic\n\nPermission is hereby granted to any person obtaining a copy of this software\n(the “Software”) to use, copy, modify, merge, publish and/or distribute copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n1. **Don’t plagiarize.** The above copyright notice and this license shall be\n   included in all copies or substantial portions of the Software.\n\n2. **Don’t use the same license on more than one project.** Each licensed copy\n   of the Software shall be actively installed in no more than one production\n   environment at a time.\n\n3. **Don’t mess with the licensing features.** Software features related to\n   licensing shall not be altered or circumvented in any way, including (but\n   not limited to) license validation, payment prompts, feature restrictions,\n   and update eligibility.\n\n4. **Pay up.** Payment shall be made immediately upon receipt of any notice,\n   prompt, reminder, or other message indicating that a payment is owed.\n\n5. **Follow the law.** All use of the Software shall not violate any applicable\n   law or regulation, nor infringe the rights of any other person or entity.\n\nFailure to comply with the foregoing conditions will automatically and\nimmediately result in termination of the permission granted hereby. This\nlicense does not include any right to receive updates to the Software or\ntechnical support. Licensees bear all risk related to the quality and\nperformance of the Software and any modifications made or obtained to it,\nincluding liability for actual and consequential harm, such as loss or\ncorruption of data, and any necessary service, repair, or correction.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER\nLIABILITY, INCLUDING SPECIAL, INCIDENTAL AND CONSEQUENTIAL DAMAGES, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport $ from 'jquery'\nimport Garnish from 'garnish'\nimport Craft from 'craft'\n\nimport NS from '../namespace'\n\nimport BlockSort from './BlockSort'\nimport BlockType from './BlockType'\nimport Group from './Group'\nimport Block from './Block'\nimport Buttons from './Buttons'\nimport ButtonsGrid from './ButtonsGrid'\nimport ButtonsList from './ButtonsList'\n\nimport './styles/input.scss'\n\nconst _defaults = {\n  name: null,\n  namespace: [],\n  blockTypes: [],\n  groups: [],\n  blocks: [],\n  inputId: null,\n  maxBlocks: 0,\n  maxTopBlocks: 0,\n  minLevels: 0,\n  maxLevels: 0,\n  ownerId: null\n}\n\nexport default Garnish.Base.extend({\n\n  _templateNs: [],\n  _name: null,\n  _siteId: null,\n  _visibleLayoutElements: {},\n\n  init (settings = {}) {\n    settings = Object.assign({}, _defaults, settings)\n\n    this._templateNs = NS.parse(settings.namespace)\n    this._blockTypes = []\n    this._groups = settings.groups.map(gInfo => new Group(gInfo))\n    this._blocks = []\n    this._id = settings.id\n    this._name = settings.name\n    this._minBlocks = settings.minBlocks\n    this._maxBlocks = settings.maxBlocks\n    this._maxTopBlocks = settings.maxTopBlocks\n    this._minLevels = settings.minLevels\n    this._maxLevels = settings.maxLevels\n    this._ownerId = settings.ownerId\n    this._showBlockTypeHandles = settings.showBlockTypeHandles\n\n    switch (settings.newBlockMenuStyle) {\n      case 'grid':\n        this.ButtonClass = ButtonsGrid\n        break\n      case 'list':\n        this.ButtonClass = ButtonsList\n        break\n      default:\n        this.ButtonClass = Buttons\n    }\n\n    const ownerIdElement = $('[name=\"setId\"], [name=\"entryId\"], [name=\"categoryId\"]')\n    if (ownerIdElement.length) {\n      this._ownerId = ownerIdElement.val()\n    }\n\n    this.$container = $('#' + settings.inputId)\n\n    const setGroupIds = {}\n    this._groups.forEach(group => {\n      setGroupIds[group.getId()] = true\n    })\n\n    const tempBlockTypes = {}\n\n    for (const btInfo of settings.blockTypes) {\n      // Filter out the block type if its group isn't included\n      if (btInfo.groupId === null || typeof setGroupIds[btInfo.groupId] !== 'undefined') {\n        const blockType = new BlockType(btInfo)\n        this._blockTypes.push(blockType)\n        tempBlockTypes[blockType.getHandle()] = blockType\n      }\n    }\n\n    this.$form = this.$container.closest('form')\n    this._siteId = this.$form.find('input[name=\"siteId\"]').val()\n\n    const $neo = this.$container.find('[data-neo]')\n    this.$blocksContainer = $neo.filter('[data-neo=\"container.blocks\"]')\n    this.$buttonsContainer = $neo.filter('[data-neo=\"container.buttons\"]')\n\n    this._buttons = new this.ButtonClass({\n      $ownerContainer: this.$container,\n      field: this,\n      blockTypes: this.getBlockTypes(true),\n      groups: this.getGroups(),\n      maxBlocks: this.getMaxBlocks(),\n      maxTopBlocks: this.getMaxTopBlocks()\n    })\n\n    this.$buttonsContainer.append(this._buttons.$container)\n    this._buttons.on('newBlock', e => this['@newBlock'](e))\n    this._buttons.initUi()\n\n    this._blockSort = new BlockSort({\n      container: this.$blocksContainer,\n      handle: '[data-neo-b$=\".button.move\"]',\n      maxTopBlocks: this.getMaxTopBlocks(),\n      filter: () => {\n        // Only return all the selected items if the target item is selected\n        if (this._blockSort.$targetItem.hasClass('is-selected')) {\n          return this.blockSelect.getSelectedItems()\n        }\n\n        return this._blockSort.$targetItem\n      },\n      collapseDraggees: true,\n      magnetStrength: 4,\n      helperLagBase: 1.5,\n      helperOpacity: 0.9,\n      onDragStop: () => {\n        this._updateBlockOrder()\n        this._updateButtons()\n      }\n    })\n\n    this.blockSelect = new Garnish.Select(this.$blocksContainer, null, {\n      multi: true,\n      vertical: true,\n      handle: '> .ni_block_topbar [data-neo-b$=\".select\"]',\n      checkboxMode: true,\n      selectedClass: 'is-selected sel'\n    })\n\n    this.$blocksContainer.find('.ni_block').each((i, blockDiv) => {\n      const $block = $(blockDiv)\n      const bInfo = {}\n      bInfo.id = $block.attr('data-neo-b-id')\n      bInfo.sortOrder = i\n      bInfo.collapsed = $block.hasClass('is-collapsed')\n      bInfo.enabled = !!$block.find(`[data-neo-b=\"${bInfo.id}.input.enabled\"]`).val()\n      bInfo.level = parseInt($block.find(`[data-neo-b=\"${bInfo.id}.input.level\"]`).val())\n      bInfo.field = this\n      bInfo.namespace = [...this._templateNs, bInfo.id]\n\n      const blockTypeHandle = $block.find(`[data-neo-b=\"${bInfo.id}.input.type\"]`).val()\n      const blockType = tempBlockTypes[blockTypeHandle]\n\n      // If the block type data isn't there, it's been filtered out and the blocks shouldn't be included\n      if (typeof blockType === 'undefined') {\n        $block.remove()\n        return\n      }\n\n      bInfo.blockType = new BlockType({\n        id: blockType.getId(),\n        fieldLayoutId: blockType.getFieldLayoutId(),\n        name: blockType.getName(),\n        handle: blockType.getHandle(),\n        enabled: blockType.getEnabled(),\n        description: blockType.getDescription(),\n        maxBlocks: blockType.getMaxBlocks(),\n        maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n        maxChildBlocks: blockType.getMaxChildBlocks(),\n        groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n        childBlocks: blockType.getChildBlocks(),\n        topLevel: blockType.getTopLevel(),\n        hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n        creatableByUser: blockType.isCreatableByUser(),\n        deletableByUser: blockType.isDeletableByUser(),\n        editableByUser: blockType.isEditableByUser()\n      })\n      bInfo.showButtons = !this.atMaxLevels(bInfo.level)\n\n      const block = new Block(bInfo)\n      block.initUi(false)\n      this._setBlockEvents(block)\n\n      this._blocks.push(block)\n      this._blockSort.addBlock(block)\n      this.blockSelect.addItems(block.$container)\n    })\n\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    // Create any required top level blocks, if this field has only one top level block type\n    if (this._minBlocks > 0) {\n      const missingBlockCount = this._minBlocks - this._blocks.length\n      const topLevelBlockTypes = this.getBlockTypes(true)\n\n      if (topLevelBlockTypes.length === 1 && missingBlockCount > 0) {\n        for (let i = this._blocks.length; i < this._minBlocks; i++) {\n          this['@newBlock']({\n            blockType: topLevelBlockTypes[0],\n            createChildBlocks: false,\n            index: i,\n            level: 1\n          })\n        }\n      }\n    }\n\n    // Make sure menu states (for pasting blocks) are updated when changing browser tabs\n    this.addListener(document, 'visibilitychange.input', () => this._updateButtons())\n\n    this.addListener(this.$container, 'resize', () => this.updateResponsiveness())\n\n    const serialized = typeof this.$form.data('serializer') === 'function'\n      ? this.$form.data('serializer')()\n      : this.$form.serialize()\n    this.$form.data('initialSerializedValue', serialized)\n\n    // Add error highlight for Matrix fields within Neo\n    this._setMatrixClassErrors()\n    this._setBlockTypeClassErrors()\n\n    this._blocks\n      .filter(block => !block.isExpanded())\n      .forEach(block => block.updatePreview())\n\n    this._registerDynamicBlockConditions()\n\n    this.trigger('afterInit')\n  },\n\n  getName () {\n    return this._name\n  },\n\n  updateResponsiveness () {\n    for (const block of this._blocks) {\n      block.updateResponsiveness()\n      block.getButtons()?.updateResponsiveness()\n    }\n\n    this._buttons.updateResponsiveness()\n    this._tempButtons?.updateResponsiveness()\n  },\n\n  addBlock (block, index = -1, level = 1, animate = null, createChildBlocks = true) {\n    this.$form.data('elementEditor')?.pause()\n    const blockCount = this._blocks.length\n    index = index >= 0 ? Math.max(0, Math.min(index, blockCount)) : blockCount\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    const prevBlock = index > 0 ? this._blocks[index - 1] : false\n    const nextBlock = index < blockCount ? this._blocks[index] : false\n\n    if (!prevBlock) {\n      this.$blocksContainer.prepend(block.$container)\n    } else {\n      const minLevel = nextBlock ? nextBlock.getLevel() : 1\n      const maxLevel = prevBlock.getLevel() + (prevBlock.getBlockType().isParent() ? 1 : 0)\n\n      level = Math.max(minLevel, Math.min(level, maxLevel))\n\n      const prevBlockOnLevel = this._findPrevBlockOnLevel(index, level)\n\n      if (prevBlockOnLevel) {\n        prevBlockOnLevel.$container.after(block.$container)\n      } else {\n        prevBlock.$blocksContainer.prepend(block.$container)\n      }\n    }\n\n    block.setLevel(level)\n\n    this._blocks.push(block)\n    this._blockSort.addBlock(block)\n    this.blockSelect.addItems(block.$container)\n\n    block.initUi()\n    this._setBlockEvents(block)\n    this._destroyTempButtons()\n    this._updateBlockOrder()\n    this._updateBlockChildren()\n    this._updateButtons()\n\n    this._visibleLayoutElements[block.getId()] = block.getBlockType().getDefaultVisibleLayoutElements()\n\n    // Create any required child blocks, if this block has only one child block type\n    const createChildBlocksIfAllowed = () => {\n      if (createChildBlocks) {\n        const blockType = block.getBlockType()\n        const minChildBlocks = blockType.getMinChildBlocks()\n\n        if (minChildBlocks > 0) {\n          let childBlockTypes = blockType.getChildBlocks()\n\n          if (childBlockTypes === '*') {\n            childBlockTypes = this.getBlockTypes()\n          }\n\n          if (childBlockTypes.length === 1) {\n            const childBlockType = this.getBlockTypeByHandle(childBlockTypes[0])\n\n            for (let i = 0; i < minChildBlocks; i++) {\n              this['@newBlock']({\n                blockType: childBlockType,\n                createChildBlocks: false,\n                index: index + i + 1,\n                level: level + 1\n              })\n            }\n          }\n        }\n      }\n\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(block.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => {\n          Garnish.scrollContainerToElement(block.$container)\n          createChildBlocksIfAllowed()\n        }))\n    } else {\n      createChildBlocksIfAllowed()\n    }\n\n    this.trigger('addBlock', {\n      block,\n      index\n    })\n  },\n\n  removeBlock (block, animate = null, _delayAnimate = null) {\n    this.$form.data('elementEditor')?.pause()\n\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    _delayAnimate = typeof _delayAnimate === 'boolean' ? _delayAnimate : false\n\n    const childBlocks = this._findChildBlocks(this._blocks.indexOf(block))\n    for (const childBlock of childBlocks) {\n      this.removeBlock(childBlock, true, true)\n    }\n\n    block.off('.input')\n\n    this._blocks = this._blocks.filter(b => b !== block)\n    this._blockSort.removeItems(block.$container)\n    this.blockSelect.removeItems(block.$container)\n\n    this._destroyTempButtons()\n    this._updateButtons()\n\n    const finishTheRemoval = () => {\n      block.$container.remove()\n      this._updateBlockChildren()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animate) {\n      block.$container\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: _delayAnimate ? 10 : -(block.$container.outerHeight())\n        }, 'fast', _ => finishTheRemoval())\n    } else {\n      finishTheRemoval()\n    }\n\n    block.destroy()\n\n    this.trigger('removeBlock', {\n      block\n    })\n  },\n\n  _setBlockEvents (block) {\n    block.on('removeBlock.input', _ => {\n      if (this.getSelectedBlocks().length > 1) {\n        if (window.confirm(Craft.t('neo', 'Are you sure you want to delete the selected blocks?'))) {\n          this._blockBatch(block, b => this.removeBlock(b))\n        }\n      } else {\n        this.removeBlock(block)\n      }\n    })\n    block.on('toggleEnabled.input', e => this._blockBatch(block, b => b.toggleEnabled(e.enabled)))\n    block.on('toggleExpansion.input', e => this._blockBatch(block, b => b.toggleExpansion(e.expanded)))\n    block.on('moveUpBlock.input', _ => this._moveBlock(block, 'up'))\n    block.on('moveDownBlock.input', _ => this._moveBlock(block, 'down'))\n    block.on('newBlock.input', e => this['@newBlock'](Object.assign(e, { index: this._getNextBlockIndex(block) })))\n    block.on('addBlockAbove.input', e => this['@addBlockAbove'](e))\n    block.on('copyBlock.input', e => this['@copyBlock'](e))\n    block.on('pasteBlock.input', e => this['@pasteBlock'](e))\n    block.on('duplicateBlock.input', e => this['@duplicateBlock'](e))\n    block.on('change.input', () => this.trigger('change', { block }))\n  },\n\n  _moveBlock (block, direction, animate = true) {\n    if (!['up', 'down'].includes(direction)) {\n      return\n    }\n\n    this.$form.data('elementEditor')?.pause()\n\n    const siblings = block.getSiblings(this.getBlocks())\n    const index = siblings.indexOf(block)\n    const moveUp = index > 0 && direction === 'up'\n    const moveDown = index < siblings.length - 1 && direction === 'down'\n\n    if (index === -1 || moveUp === moveDown) {\n      return\n    }\n\n    const animateMove = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n    const $block = block.$container\n\n    const startTheMove = () => {\n      $block.detach()\n\n      if (moveUp) {\n        siblings[index - 1].$container.before($block)\n      } else {\n        siblings[index + 1].$container.after($block)\n      }\n    }\n\n    const finishTheMove = () => {\n      this._updateBlockOrder()\n      this._updateButtons()\n      this.$form.data('elementEditor')?.resume()\n    }\n\n    if (animateMove) {\n      $block\n        .css({\n          opacity: 1,\n          marginBottom: 10\n        })\n        .velocity({\n          opacity: 0,\n          marginBottom: -($block.outerHeight())\n        }, 'fast', _ => {\n          startTheMove()\n\n          $block\n            .css({\n              opacity: 0,\n              marginBottom: -($block.outerHeight())\n            })\n            .velocity({\n              opacity: 1,\n              marginBottom: 10\n            }, 'fast', _ => {\n              finishTheMove()\n              Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement($block))\n            })\n        })\n    } else {\n      startTheMove()\n      finishTheMove()\n    }\n  },\n\n  getBlockByElement ($block) {\n    return this._blocks.find(block => block.$container.is($block))\n  },\n\n  getBlocks (level = 0) {\n    return level > 0 ? this._blocks.filter(b => b.getLevel() === level) : Array.from(this._blocks)\n  },\n\n  getBlockTypeById (id) {\n    return this._blockTypes.find(bt => bt.getId() === id)\n  },\n\n  getBlockTypeByHandle (handle) {\n    return this._blockTypes.find(bt => bt.getHandle() === handle)\n  },\n\n  getBlockTypes (topLevelOnly) {\n    topLevelOnly = typeof topLevelOnly === 'boolean' ? topLevelOnly : false\n\n    return topLevelOnly\n      ? this._blockTypes.filter(bt => bt.getTopLevel())\n      : Array.from(this._blockTypes)\n  },\n\n  getGroups () {\n    return Array.from(this._groups)\n  },\n\n  getItems () {\n    return [...this.getBlockTypes(), ...this.getGroups()].sort((a, b) => a.getSortOrder() - b.getSortOrder())\n  },\n\n  getMaxBlocks () {\n    return this._maxBlocks\n  },\n\n  getMaxTopBlocks () {\n    return this._maxTopBlocks\n  },\n\n  getMinLevels () {\n    return this._minLevels\n  },\n\n  getMaxLevels () {\n    return this._maxLevels\n  },\n\n  atMaxLevels (level) {\n    return this._maxLevels > 0 && level + 1 > this._maxLevels\n  },\n\n  getSelectedBlocks () {\n    const $selectedBlocks = this.blockSelect.getSelectedItems()\n    return this._blocks.filter(block => block.$container.closest($selectedBlocks).length > 0)\n  },\n\n  getCopiedBlocks () {\n    const copyData = window.localStorage.getItem(`neo:copy:${this._name}`)\n\n    if (!copyData) {\n      return []\n    }\n\n    const { blocks } = JSON.parse(copyData)\n    return blocks\n  },\n\n  setVisibleElements (blockId, visibleLayoutElements) {\n    // visibleLayoutElements might (will probably) be a JSON-encoded string\n    if (typeof visibleLayoutElements === 'string') {\n      visibleLayoutElements = JSON.parse(visibleLayoutElements)\n    }\n\n    const block = this._blocks.find((block) => block.getId() === blockId)\n\n    if (block === null) {\n      return\n    }\n\n    this._visibleLayoutElements[blockId] = visibleLayoutElements\n  },\n\n  _setMatrixClassErrors () {\n    // TODO: will need probably need to find a method within php instead of JS\n    // temp solution for now.\n    const matrixErrors = $('.ni_block_body .matrix-field .input.errors')\n\n    matrixErrors.each(function () {\n      const _this = $(this)\n      const tabContainer = _this.closest('.ni_block_content_tab')\n      const tabData = tabContainer.data('neo-b-info')\n      const closestContainer = _this.closest('.ni_block')\n      const bar = closestContainer.find('.tabs .tab[data-neo-b-info=\"' + tabData + '\"]')\n\n      if (bar.length) {\n        bar.addClass('has-errors')\n      }\n    })\n  },\n\n  _setBlockTypeClassErrors () {\n    const tabErrors = $('.ni_block .tab.has-errors')\n\n    tabErrors.each(function () {\n      const parents = tabErrors.parents('.ni_block.is-collapsed')\n\n      parents.each(function () {\n        const _this = $(this)\n        _this.find('> .ni_block_topbar .title .blocktype').addClass('has-errors')\n      })\n    })\n  },\n\n  _updateBlockOrder () {\n    const blocks = []\n\n    this.$blocksContainer.find('.ni_block').each((index, element) => {\n      const block = this.getBlockByElement(element)\n      blocks.push(block)\n    })\n\n    this._blocks = blocks\n    this.trigger('updateBlockOrder')\n    this.trigger('change', { block: null })\n  },\n\n  _updateBlockChildren () {\n    for (const block of this._blocks) {\n      const children = block.$blocksContainer.children('.ni_block')\n      const collapsedCount = Math.min(children.length, 8) // Any more than 8 and it's a little too big\n      const collapsedChildren = []\n\n      for (let i = 0; i < collapsedCount; i++) {\n        collapsedChildren.push('<div class=\"ni_block_collapsed-children_child\"></div>')\n      }\n\n      block.$collapsedChildrenContainer.html(collapsedChildren.join(''))\n    }\n  },\n\n  _checkMaxChildren (block) {\n    if (!block) {\n      return true\n    }\n\n    const blockType = block.getBlockType()\n    const maxChildren = blockType.getMaxChildBlocks()\n\n    if (maxChildren > 0) {\n      const children = this._findChildBlocks(block)\n\n      return children.length < maxChildren\n    }\n\n    return true\n  },\n\n  _updateButtons () {\n    const blocks = this.getBlocks()\n    this._buttons.updateButtonStates(blocks)\n    this._tempButtons?.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock))\n\n    for (const block of blocks) {\n      block.updateActionsMenu()\n      block.getButtons()?.updateButtonStates(blocks, this._checkMaxChildren(block), block)\n      block.toggleShowButtons(!this.atMaxLevels(block.getLevel()))\n    }\n  },\n\n  _blockBatch (block, callback) {\n    const blocks = block.isSelected() ? this.getSelectedBlocks() : [block]\n\n    for (const b of blocks) {\n      callback(b)\n    }\n  },\n\n  _destroyTempButtons (animate = null) {\n    animate = !Garnish.prefersReducedMotion() && (typeof animate === 'boolean' ? animate : true)\n\n    if (this._tempButtons) {\n      const buttons = this._tempButtons\n      buttons.off('newBlock')\n\n      if (animate) {\n        buttons.$container\n          .css({\n            opacity: 1,\n            marginBottom: 10\n          })\n          .velocity({\n            opacity: 0,\n            marginBottom: -(buttons.$container.outerHeight())\n          }, 'fast', e => buttons.$container.remove())\n      } else {\n        buttons.$container.remove()\n      }\n\n      this._tempButtons = null\n      this._tempButtonsBlock = null\n    }\n  },\n\n  _findPrevBlockOnLevel (index, level) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n\n    let block = blocks[--index]\n    let lowestLevel = Number.MAX_VALUE\n\n    while (block) {\n      const blockLevel = block.getLevel()\n\n      if (blockLevel < lowestLevel) {\n        if (blockLevel === level) {\n          return block\n        }\n\n        lowestLevel = blockLevel\n      }\n\n      block = this._blocks[--index]\n    }\n\n    return false\n  },\n\n  _findChildBlocks (index, descendants = null) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    descendants = (typeof descendants === 'boolean' ? descendants : false)\n    const block = this._blocks[index]\n\n    return block ? block.getChildren(this._blocks, descendants) : []\n  },\n\n  _findParentBlock (index) {\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const blocks = this._blocks\n    const block = blocks[index]\n\n    if (block) {\n      const level = block.getLevel()\n\n      if (level > 1) {\n        let i = index\n        let currentBlock = block\n\n        while (currentBlock && currentBlock.getLevel() >= level) {\n          currentBlock = blocks[--i]\n        }\n\n        return currentBlock\n      }\n    }\n\n    return null\n  },\n\n  _getNextBlockIndex (index) {\n    // If undefined, then there's no previous block and the 'next' block will be the first block\n    if (typeof index === 'undefined') {\n      return 0\n    }\n\n    if (index instanceof Block) {\n      index = this._blocks.indexOf(index)\n    }\n\n    const descendants = this._findChildBlocks(index, true)\n    const lastDescendant = descendants[descendants.length - 1]\n\n    return (lastDescendant ? this._blocks.indexOf(lastDescendant) : index) + 1\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _registerDynamicBlockConditions () {\n    // A small timeout to let the element editor initialise\n    setTimeout(() => {\n      const elementEditor = this.$form.data('elementEditor')\n      elementEditor?.on('update', () => {\n        const siteId = elementEditor.settings.siteId\n        const data = {\n          blocks: {},\n          sortOrder: [],\n          fieldId: this._id,\n          ownerCanonicalId: this._ownerId,\n          ownerDraftId: elementEditor.settings.draftId,\n          isProvisionalDraft: elementEditor.settings.isProvisionalDraft,\n          siteId\n        }\n        const originalBlockIds = {}\n        this._blocks.forEach((block) => {\n          const selectedTabId = block.$contentContainer\n            .children('[data-layout-tab]:not(.hidden)')\n            .data('layout-tab')\n          data.blocks[block.getDuplicatedBlockId()] = {\n            selectedTab: selectedTabId ?? null,\n            visibleLayoutElements: this._visibleLayoutElements[block.getId()] ?? {}\n          }\n          data.sortOrder.push(block.getDuplicatedBlockId())\n          originalBlockIds[block.getDuplicatedBlockId()] = block.getId()\n        })\n\n        Craft.queue.push(() => new Promise((resolve, reject) => {\n          Craft.sendActionRequest('POST', 'neo/input/update-visible-elements', { data })\n            .then((response) => {\n              for (const blockId in response.data.blocks) {\n                const block = this._blocks.find((block) => block.getId() === originalBlockIds[blockId])\n                this._updateVisibleElements(\n                  block,\n                  response.data.blocks[blockId],\n                  data.blocks[block.getDuplicatedBlockId()].selectedTabId\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n        }))\n      })\n    }, 200)\n  },\n\n  /**\n   * TODO: hopefully remove this in the Craft 5 version\n   * @private\n   */\n  _updateVisibleElements (block, blockData, selectedTabId) {\n    let $allTabContainers = $()\n    const visibleLayoutElements = {}\n    let changedElements = false\n\n    for (let i = 0; i < blockData.missingElements.length; i++) {\n      const tabInfo = blockData.missingElements[i]\n      let $tabContainer = block.$contentContainer.children(\n        `[data-layout-tab=\"${tabInfo.uid}\"]`\n      )\n\n      if (!$tabContainer.length) {\n        $tabContainer = $('<div/>', {\n          id: block.namespaceId(tabInfo.id),\n          class: 'flex-fields',\n          'data-id': tabInfo.id,\n          'data-layout-tab': tabInfo.uid\n        })\n        if (tabInfo.id !== selectedTabId) {\n          $tabContainer.addClass('hidden')\n        }\n        $tabContainer.appendTo(block.$contentContainer)\n      }\n\n      $allTabContainers = $allTabContainers.add($tabContainer)\n\n      for (let j = 0; j < tabInfo.elements.length; j++) {\n        const elementInfo = tabInfo.elements[j]\n\n        if (elementInfo.html !== false) {\n          if (!visibleLayoutElements[tabInfo.uid]) {\n            visibleLayoutElements[tabInfo.uid] = []\n          }\n          visibleLayoutElements[tabInfo.uid].push(elementInfo.uid)\n\n          if (typeof elementInfo.html === 'string') {\n            const html = elementInfo.html.replaceAll('__NEOBLOCK__', block.getId())\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            )\n            const $newElement = $(html)\n            if ($oldElement.length) {\n              $oldElement.replaceWith($newElement)\n            } else {\n              $newElement.appendTo($tabContainer)\n            }\n            Craft.initUiElements($newElement)\n            if ($newElement.hasClass('ni_child-blocks-ui-element')) {\n              block.resetButtons()\n            }\n            changedElements = true\n          }\n        } else {\n          const $oldElement = $tabContainer.children(\n            `[data-layout-element=\"${elementInfo.uid}\"]`\n          )\n          if (\n            !$oldElement.length ||\n            !Garnish.hasAttr(\n              $oldElement,\n              'data-layout-element-placeholder'\n            )\n          ) {\n            const $placeholder = $('<div/>', {\n              class: 'hidden',\n              'data-layout-element': elementInfo.uid,\n              'data-layout-element-placeholder': ''\n            })\n\n            if ($oldElement.length) {\n              $oldElement.replaceWith($placeholder)\n            } else {\n              $placeholder.appendTo($tabContainer)\n            }\n\n            changedElements = true\n          }\n        }\n      }\n\n      if (changedElements) {\n        this._updateButtons()\n      }\n    }\n\n    // Remove any unused tab content containers\n    // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n    const $unusedTabContainers = block.$contentContainer\n      .children('[data-layout-tab]')\n      .not($allTabContainers)\n      .not('[data-layout-tab=\"\"]')\n    if ($unusedTabContainers.length) {\n      $unusedTabContainers.remove()\n      changedElements = true\n    }\n\n    // Make the first tab visible if no others are\n    if (!$allTabContainers.filter(':not(.hidden)').length) {\n      $allTabContainers.first().removeClass('hidden')\n    }\n\n    this._visibleLayoutElements[block.getId()] = visibleLayoutElements\n\n    // Update the tabs\n    // Unfortunately can't use `block.getDuplicatedBlockId()` because it doesn't work here for new blocks\n    const idToReplace = blockData.tabs?.match(/data-neo-b=\"([0-9]+).container.tabs\"/)?.pop() ?? null\n    const tabsHtml = idToReplace\n      ? blockData.tabs.replaceAll(idToReplace, block.getId())\n      : blockData.tabs\n    const $tabsHtml = $(tabsHtml)\n    const $tabsOuterContainer = block.$topbarRightContainer.find('.tabs')\n    $tabsOuterContainer.empty().append($tabsHtml)\n    block.initTabs()\n    block.updateResponsiveness()\n\n    Craft.appendHeadHtml(blockData.headHtml.replaceAll('__NEOBLOCK__', block.getId()))\n    Craft.appendBodyHtml(blockData.bodyHtml.replaceAll('__NEOBLOCK__', block.getId()))\n\n    // Did any layout elements get added or removed?\n    if (changedElements && blockData.initialDeltaValues) {\n      Object.assign(\n        this.$form.data('initial-delta-values'),\n        blockData.initialDeltaValues\n      )\n    }\n  },\n\n  _duplicate (data, block) {\n    this.$form.data('elementEditor')?.pause()\n\n    const animate = !Garnish.prefersReducedMotion()\n    const $spinner = $(`<div class=\"ni_spinner\">${animate ? '<div class=\"spinner\"></div>' : 'Loading block'}</div>`)\n\n    if (typeof block !== 'undefined') {\n      block.$container.after($spinner)\n    } else {\n      this.$blocksContainer.prepend($spinner)\n    }\n\n    let spinnerComplete = false\n    let spinnerCallback = function () {}\n\n    if (animate) {\n      $spinner\n        .css({\n          opacity: 0,\n          marginBottom: -($spinner.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', () => {\n          spinnerComplete = true\n          spinnerCallback()\n        })\n    } else {\n      spinnerComplete = true\n      spinnerCallback()\n    }\n\n    Craft.postActionRequest('neo/input/render-blocks', data, e => {\n      if (e.success && e.blocks.length > 0) {\n        const newBlocks = []\n\n        for (const renderedBlock of e.blocks) {\n          const newId = Block.getNewId()\n\n          const blockType = this.getBlockTypeById(renderedBlock.type)\n          const newBlockType = new BlockType({\n            id: blockType.getId(),\n            fieldLayoutId: blockType.getFieldLayoutId(),\n            name: blockType.getName(),\n            handle: blockType.getHandle(),\n            enabled: blockType.getEnabled(),\n            maxBlocks: blockType.getMaxBlocks(),\n            maxSiblingBlocks: blockType.getMaxSiblingBlocks(),\n            maxChildBlocks: blockType.getMaxChildBlocks(),\n            groupChildBlockTypes: blockType.getGroupChildBlockTypes(),\n            childBlocks: blockType.getChildBlocks(),\n            topLevel: blockType.getTopLevel(),\n            hasChildBlocksUiElement: blockType.hasChildBlocksUiElement(),\n            creatableByUser: blockType.isCreatableByUser(),\n            deletableByUser: blockType.isDeletableByUser(),\n            editableByUser: blockType.isEditableByUser(),\n            tabs: renderedBlock.tabs\n          })\n\n          const newBlock = new Block({\n            namespace: [...this._templateNs, newId],\n            field: this,\n            blockType: newBlockType,\n            id: newId,\n            level: renderedBlock.level | 0,\n            enabled: !!renderedBlock.enabled,\n            collapsed: !!renderedBlock.collapsed,\n            showButtons: !this.atMaxLevels(renderedBlock.level | 0),\n            showBlockTypeHandle: this._showBlockTypeHandles\n          }, true)\n\n          newBlocks.push(newBlock)\n        }\n\n        spinnerCallback = () => {\n          let newIndex = this._getNextBlockIndex(block)\n\n          for (const newBlock of newBlocks) {\n            this.addBlock(newBlock, newIndex++, newBlock.getLevel(), false)\n          }\n\n          if (animate) {\n            const firstBlock = newBlocks[0]\n\n            firstBlock.$container\n              .css({\n                opacity: 0,\n                marginBottom: $spinner.outerHeight() - firstBlock.$container.outerHeight() + 10\n              })\n              .velocity({\n                opacity: 1,\n                marginBottom: 10\n              }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(firstBlock.$container)))\n          }\n\n          $spinner.remove()\n          this.$form.data('elementEditor')?.resume()\n        }\n\n        if (spinnerComplete) {\n          spinnerCallback()\n        }\n      }\n    })\n  },\n\n  '@newBlock' (e) {\n    const blockId = Block.getNewId()\n    const block = new Block({\n      namespace: [...this._templateNs, blockId],\n      field: this,\n      blockType: e.blockType,\n      id: blockId,\n      showButtons: !this.atMaxLevels(e.level),\n      showBlockTypeHandle: this._showBlockTypeHandles\n    }, true)\n\n    this.addBlock(block, e.index, e.level, e.createChildBlocks, e.createChildBlocks)\n  },\n\n  '@addBlockAbove' (e) {\n    this._destroyTempButtons()\n\n    const animate = !Garnish.prefersReducedMotion() && e.animate !== false\n    const block = e.block\n    const index = this._blocks.indexOf(block)\n    const parent = this._findParentBlock(index)\n    const blocks = this.getBlocks()\n    const buttons = new this.ButtonClass({\n      $ownerContainer: block.isTopLevel() ? this.$container : block.getParent().$container,\n      field: this,\n      blockTypes: !parent ? this.getBlockTypes(true) : [],\n      blocks,\n      groups: !parent ? this.getGroups() : [],\n      items: parent ? parent.getBlockType().getChildBlockItems(this.getItems()) : null,\n      maxBlocks: this.getMaxBlocks()\n    })\n\n    block.$container.before(buttons.$container)\n\n    buttons.on('newBlock', e => this['@newBlock']({\n      blockType: e.blockType,\n      index,\n      level: block.getLevel()\n    }))\n\n    buttons.initUi()\n\n    if (animate) {\n      buttons.$container\n        .css({\n          opacity: 0,\n          marginBottom: -(buttons.$container.outerHeight())\n        })\n        .velocity({\n          opacity: 1,\n          marginBottom: 10\n        }, 'fast', _ => Garnish.requestAnimationFrame(() => Garnish.scrollContainerToElement(buttons.$container)))\n    }\n\n    this._tempButtons = buttons\n    this._tempButtonsBlock = this._findParentBlock(block)\n\n    this._tempButtons.updateButtonStates(blocks, this._checkMaxChildren(this._tempButtonsBlock), this._tempButtonsBlock)\n  },\n\n  '@copyBlock' (e) {\n    // Get the selected blocks and their descendants\n    const blockGroups = []\n    let blockCount = 0\n    const ownerId = this._ownerId\n\n    this._blockBatch(e.block, (block) => {\n      // To prevent block descendants from being copied multiple times, determine whether the current block has\n      // been added to the most recently added group.\n      const blockAdded = blockCount > 0 && blockGroups[blockGroups.length - 1].indexOf(block) !== -1\n\n      if (!blockAdded) {\n        const newGroup = []\n        newGroup.push(block, ...this._findChildBlocks(block, true))\n        blockGroups.push(newGroup)\n        blockCount += newGroup.length\n      }\n    })\n\n    // Collect the relevant data from those blocks to be stored for pasting\n    const data = {\n      field: this._name,\n      blocks: []\n    }\n\n    for (const group of blockGroups) {\n      const firstBlockLevel = group[0].getLevel() - 1\n\n      for (const block of group) {\n        const blockData = {\n          type: block.getBlockType().getId(),\n          level: block.getLevel() - firstBlockLevel,\n          content: block.getContent(),\n          ownerId\n        }\n\n        if (block.isEnabled()) {\n          blockData.enabled = 1\n        }\n\n        if (!block.isExpanded()) {\n          blockData.collapsed = 1\n        }\n\n        data.blocks.push(blockData)\n      }\n    }\n\n    window.localStorage.setItem(`neo:copy:${this._name}`, JSON.stringify(data))\n\n    this._updateButtons()\n\n    const notice = blockCount === 1 ? '1 block copied' : '{n} blocks copied'\n    Craft.cp.displayNotice(Craft.t('neo', notice, { n: blockCount }))\n  },\n\n  '@pasteBlock' (e) {\n    const block = e.block\n    const baseLevel = (block?.getLevel() ?? 1) - 1\n    const blocks = this.getCopiedBlocks()\n\n    if (blocks.length > 0) {\n      for (const pasteBlock of blocks) {\n        pasteBlock.level += baseLevel\n      }\n\n      NS.enter(this._templateNs)\n\n      const data = {\n        namespace: NS.toFieldName(),\n        siteId: this._siteId,\n        blocks\n      }\n\n      NS.leave()\n\n      this._duplicate(data, block)\n    }\n  },\n\n  '@duplicateBlock' (e) {\n    const block = e.block\n    const blockIndex = this._blocks.indexOf(block)\n    const subBlocks = this._findChildBlocks(blockIndex, true)\n    const ownerId = this._ownerId\n\n    const getBlockData = block => {\n      return {\n        collapsed: !block.isExpanded() | 0,\n        content: block.getContent(),\n        enabled: block.isEnabled() | 0,\n        level: block.getLevel(),\n        ownerId,\n        type: block.getBlockType().getId()\n      }\n    }\n\n    NS.enter(this._templateNs)\n\n    const data = {\n      namespace: NS.toFieldName(),\n      siteId: this._siteId,\n      blocks: [\n        getBlockData(block),\n        ...subBlocks.map(getBlockData)\n      ]\n    }\n\n    NS.leave()\n\n    this._duplicate(data, block)\n  }\n})\n","import Input from './input/Input'\n\nconst context = window ?? this\nconst inputs = []\n\ncontext.Neo = {\n  Input,\n  inputs,\n\n  createInput (settings = {}) {\n    const input = new Input(settings)\n    inputs.push(input)\n\n    return input\n  }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","Garnish","Craft","_stack","enter","segments","join","arguments","length","undefined","this","fromFieldName","joined","getNamespace","push","enterByFieldName","fieldName","leave","pop","Array","from","parse","value","indexOf","split","separator","prefix","toFieldName","replace","toString","slice","match","BlockSort","$container","blocks","maxTopBlocks","_draggeeBlocks","init","items","settings","$","defaults","axis","base","container","getHelperTargetX","$draggee","offset","left","getHelperTargetY","magnet","magnetStrength","draggeeOffsetY","top","mouseY","mouseOffsetY","getBlockByElement","$block","find","block","is","getParentBlock","$parentBlock","parent","closest","onDragStart","that","each","_calculateMidpoints","onDrag","midpoint","_getClosestMidpoint","_moveDraggeeToBlock","type","direction","onDragStop","setLevel","parentBlock","getLevel","$childBlock","childBlock","returnHelpersToDraggees","addBlock","addItems","removeBlock","filter","b","removeItems","minDistance","Number","MAX_VALUE","maxDistance","MIN_VALUE","_currentMidpoints","DIRECTION_UP","position","_draggeeBlockHeight","_draggeeBlockY","height","midpoints","_getBlockMidpoints","keys","DIRECTION_DOWN","endMidpoint","margin","TYPE_END","isExpanded","blockHeight","topbarHeight","$topbarContainer","childrenHeight","$childrenContainer","preChildrenContentHeight","$contentContainer","_validateDraggeeChildren","TYPE_CONTENT","buttonsHeight","getButtons","TYPE_CHILDREN","validChild","$blocksContainer","append","after","before","getBlockType","isParent","prepend","_updateHelperAppearance","field","getField","maxLevels","getMaxLevels","parentLevel","firstDraggeeLevel","blockExceedsMax","blockOrDescendantExceedsMax","descendants","getChildren","getBlocks","some","topBlocks","children","topBlocksCount","draggeeBlock","getTopLevel","includes","blockType","maxChildBlocks","getMaxChildBlocks","blockChildren","blockChildCount","blockChildrenWithoutDraggees","checkedDraggeeBlocks","isValidChildBlock","draggeeBlockType","maxSiblingBlocks","getMaxSiblingBlocks","draggeeBlocksOfType","getHandle","$helper","helpers","id","data","css","width","_defaults","name","errors","assign","_name","_errors","_uid","uid","getErrors","getName","getUid","fieldLayoutId","sortOrder","handle","maxBlocks","groupChildBlockTypes","childBlocks","topLevel","tabs","hasChildBlocksUiElement","creatableByUser","deletableByUser","editableByUser","_settings$tabs$tabNam","_settings$tabs$tabNam2","_settings$tabs$html","_settings$tabs$js","_settings$tabs$visibl","_id","_fieldLayoutId","_sortOrder","_handle","_description","description","_enabled","enabled","_minBlocks","minBlocks","_maxBlocks","_minSiblingBlocks","_maxSiblingBlocks","_minChildBlocks","minChildBlocks","_maxChildBlocks","_groupChildBlockTypes","_childBlocks","_topLevel","_tabs","tabNames","map","tab","Tab","tabUids","_html","html","_js","js","_defaultVisibleLayoutElements","visibleLayoutElements","_hasChildBlocksUiElement","_creatableByUser","_deletableByUser","_editableByUser","getType","getId","getFieldLayoutId","getSortOrder","getDescription","getEnabled","getMinBlocks","getMaxBlocks","getMinSiblingBlocks","getMinChildBlocks","getGroupChildBlockTypes","getChildBlocks","getTabs","getHtml","blockId","_replaceBlockIdPlaceholder","getJs","getDefaultVisibleLayoutElements","_objectSpread","input","getChildBlockItems","firstPass","item","hasChildBlock","i","nextItem","cb","isArray","isCreatableByUser","isDeletableByUser","isEditableByUser","alwaysShowDropdown","_alwaysShowDropdown","getAlwaysShowDropdown","isBlank","index","$parent","eq","namespace","level","buttons","collapsed","modified","showButtons","showBlockTypeHandle","_resources","_escapeMap","_resourceFilter","url","href","src","paramIndex","substr","isNew","_escapeHTML","str","s","_limit","l","_templateNs","_field","_blockType","_initialised","_expanded","_modified","_initialState","_forceModified","generateElement","NS","_initialEnabled","_showButtons","_renderOldChildBlocksContainer","_generateElement","concat","$neo","$bodyContainer","$topbarLeftContainer","$topbarRightContainer","$handleContainer","$tabContainer","$menuContainer","$previewContainer","$settingsButton","$togglerButton","$enabledInput","$levelInput","$collapsedInput","$status","$sortOrder","$form","resetButtons","hasErrors","selector","$tabButton","addClass","toggleExpansion","toggleShowButtons","addListener","showHandle","baseInputName","baseInputId","typeTabs","hasTabs","actionBtnLabel","actionMenuId","tabsBtnLabel","tabsMenuId","sortOrderName","elementHtml","_collapsed","_level","isNaN","parseInt","tabName","tabUid","$elementHtml","class","insertAfter","initUi","_this$_buttons","callInitUiElements","$foot","initTabs","_settingsMenu","on","hasClass","forEach","toggleSettingsMenu","removeClass","_handleActionClick","_handleActionKeydown","toggleEnabled","_buttons","updateResponsiveness","e","parents","_","cbuiElement","$tabContent","tabIndex","add","content","_getPostData","detectChange","_detectChange","observer","window","MutationObserver","setTimeout","observe","attributes","childList","characterData","subtree","_detectChangeObserver","toggleClass","trigger","$tabsButton","$tabsContainer","_tabsMenu","_handleTabKeydown","destroy","remove","clearInterval","_detectChangeInterval","disconnect","getDuplicatedBlockId","_this$$form$data$dupl","_this$$form$data","duplicatedElements","isTopLevel","val","setModified","isModified","getSiteId","_siteId","$siteId","getContent","rawContent","setValue","currentSet","rawName","getParent","_blocks","blockParent","currentBlock","_blocks2","currentLevel","getSiblings","_blocks3","updatePreview","condensed","$childFields","$fields","previewText","$field","$input","fieldType","label","text","values","$assets","$asset","$thumbContainer","srcset","title","checked","color","colorText","colorRev","background","date","time","$subInputs","$subInput","subValue","$selectedType","first","$visibleOption","visibleInputVal","$visibleElement","customText","lines","test","isSelected","collapse","save","animate","expand","expandContainer","collapseContainer","expandedCss","opacity","outerHeight","collapsedCss","clearCss","velocity","saveExpansion","expanded","_this$$form$data2","sentBlockId","isProvisionalDraft","siteId","Promise","resolve","reject","then","catch","disable","enable","triggerEvent","blockTypeEnabled","actuallyEnabled","enableContainer","disableContainer","isEnabled","show","$buttonsContainer","$childrenWarningsContainer","selectTab","attr","_this$_topbarLeftWidt","_this$_topbarRightWid","isMobileBrowser","_topbarLeftWidth","_topbarRightWidth","hasRoomForIndividualTabs","updateActionsMenu","_this$getParent","_parentBlockType$getC","parentBlockType","allowedBlockTypes","getBlockTypes","bt","getBlockTypeByHandle","updateMenuStates","getMaxTopBlocks","additionalCheck","noAllowedBlockTypes","blocksOfType","maxBlockTypes","siblingBlocks","totalTopBlocks","allDisabled","addDisabled","typeDisabled","cloneDisabled","pasteData","JSON","localStorage","getItem","pasteDisabled","_pasteData$blocks$len","_pasteData$blocks","childBlockCount","pasteBlockCount","hasSameBlockType","siblingBlockCount","pasteSiblingBlockCount","currentBlockTypesById","reduce","m","v","count","pasteBlock","pasteBlockTypeObj","pasteBlockType","currentBlocksOfTypeCount","maxPasteBlockTypes","siblingIndex","disableMoveUp","disableMoveDown","$collapsedChildrenContainer","ButtonClass","$ownerContainer","getItems","namespaceId","namespacedId","toggle","_toggle","hide","preventDefault","keyCode","elementEditor","enableAutosave","draftId","initial","badKeys","startsWith","$option","target","$checkFrom","isLeft","isRight","_this$$form$data3","_this$$form$data4","pause","resume","currentTarget","_totalNewBlocks","getNewId","blockTypes","groups","NewBlockMenu","constructor","_defineProperty","_items","_blockTypes","_blockTypeGroups","sort","_maxTopBlocks","renderButtons","$blockButtons","$groupButtons","updateState","_this$$ownerContainer","ownerBlockType","ungroupChildBlockTypes","buttonsHtml","blockTypesHtml","currentGroup","firstButton","generateGroupDropdown","titleAttr","BUTTON_INFO","lastGroupHadBlockTypes","getBlockTypeGroups","getBlockTypeByButton","$button","btHandle","maxBlocksMet","maxTopBlocksMet","disabled","blockHasSameType","maxBlocksOfType","siblingBlocksOfType","menu","$menuButtons","$options","GarnishNewBlockMenu","getGroups","updateButtonStates","blockTypeHandle","Buttons","menubtn","grandParent","childrenContainer","_buttonsContainerWidth","isMobile","extend","ButtonsGrid","_ref","_this$_field","blockTypeIconId","hasBlockTypeIcon","ButtonsList","inputId","minLevels","ownerId","_visibleLayoutElements","_groups","gInfo","Group","_minLevels","_maxLevels","_ownerId","_showBlockTypeHandles","showBlockTypeHandles","newBlockMenuStyle","ownerIdElement","setGroupIds","group","tempBlockTypes","btInfo","groupId","BlockType","_blockSort","$targetItem","blockSelect","getSelectedItems","collapseDraggees","helperLagBase","helperOpacity","_updateBlockOrder","_updateButtons","multi","vertical","checkboxMode","selectedClass","blockDiv","bInfo","atMaxLevels","Block","_setBlockEvents","_updateBlockChildren","missingBlockCount","topLevelBlockTypes","createChildBlocks","document","serialized","serialize","_setMatrixClassErrors","_setBlockTypeClassErrors","_registerDynamicBlockConditions","_this$_tempButtons","_block$getButtons","_tempButtons","blockCount","Math","max","min","prevBlock","nextBlock","minLevel","maxLevel","prevBlockOnLevel","_findPrevBlockOnLevel","_destroyTempButtons","createChildBlocksIfAllowed","childBlockTypes","childBlockType","marginBottom","_delayAnimate","_findChildBlocks","off","finishTheRemoval","getSelectedBlocks","confirm","_blockBatch","_moveBlock","_getNextBlockIndex","_this$$form$data5","siblings","moveUp","moveDown","animateMove","startTheMove","detach","finishTheMove","_this$$form$data6","getBlockTypeById","topLevelOnly","getMinLevels","$selectedBlocks","getCopiedBlocks","copyData","setVisibleElements","_this","tabData","bar","tabErrors","element","collapsedCount","collapsedChildren","_checkMaxChildren","maxChildren","_this$_tempButtons2","_tempButtonsBlock","_block$getButtons2","callback","lowestLevel","blockLevel","_findParentBlock","lastDescendant","fieldId","ownerCanonicalId","ownerDraftId","originalBlockIds","_this$_visibleLayoutE","selectedTabId","selectedTab","response","_updateVisibleElements","blockData","_blockData$tabs$match","_blockData$tabs","_blockData$tabs$match2","$allTabContainers","changedElements","missingElements","tabInfo","appendTo","j","elements","elementInfo","replaceAll","$oldElement","$newElement","replaceWith","$placeholder","$unusedTabContainers","not","idToReplace","tabsHtml","$tabsHtml","empty","headHtml","bodyHtml","initialDeltaValues","_duplicate","_this$$form$data7","$spinner","spinnerComplete","spinnerCallback","success","newBlocks","renderedBlock","newId","newBlockType","newBlock","_this$$form$data8","newIndex","firstBlock","blockGroups","newGroup","firstBlockLevel","setItem","stringify","notice","n","_block$getLevel","baseLevel","blockIndex","subBlocks","getBlockData","context","_window","inputs","Neo","Input","createInput"],"sourceRoot":""}